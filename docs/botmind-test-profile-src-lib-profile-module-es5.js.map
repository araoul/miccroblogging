{"version":3,"sources":["webpack:///libs/profile/src/lib/+state/profile.facade.ts","webpack:///libs/profile/src/lib/profile.component.ts","webpack:///libs/profile/src/lib/profile.component.html","webpack:///libs/profile/src/lib/profile-resolver.service.ts","webpack:///libs/profile/src/lib/profile-articles.component.ts","webpack:///libs/profile/src/lib/profile-articles.component.html","webpack:///libs/profile/src/lib/+state/profile.reducer.ts","webpack:///libs/profile/src/lib/+state/profile.actions.ts","webpack:///libs/profile/src/lib/profile.service.ts","webpack:///libs/profile/src/lib/+state/profile.effects.ts","webpack:///libs/profile/src/lib/profile.module.ts"],"names":["ProfileFacade","store","profile$","select","id","dispatch","ProfileComponent","facade","authFacade","isUser$","unsubscribe$","currentUser$","user$","pipe","p","u","username","following","subscribe","isUser","next","unfollow","follow","complete","toggleFollowing","selector","templateUrl","styleUrls","changeDetection","OnPush","ProfileResolverService","route","state","params","ProfileArticlesResolverService","config","listConfig","filters","author","ProfileFavoritesResolverService","parent","favorited","ProfileArticlesComponent","profileFeatureKey","profileInitialState","bio","image","loading","getProfile","reducer","action","profile","profileReducer","getProfileSuccess","getProfileFail","followSuccess","followFail","unFollow","unFollowSuccess","unFollowFail","ProfileService","apiService","get","data","ProfileEffects","actions$","actionsService","profileService","getProfile$","group","error","follow$","slug","followUser","response","unFollow$","unfollowUser","ProfileModule","forChild","path","component","resolve","canActivate","children","forFeature","initialState","imports","providers","declarations"],"mappings":"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","file":"botmind-test-profile-src-lib-profile-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as ProfileActions from './profile.actions';\r\n\r\nimport { getProfile, ProfileState } from './profile.reducer';\r\n\r\n@Injectable()\r\nexport class ProfileFacade {\r\n  profile$ = this.store.select(getProfile);\r\n\r\n  constructor(private store: Store<ProfileState>) {}\r\n\r\n  follow(id: string) {\r\n    this.store.dispatch(ProfileActions.follow({ id }));\r\n  }\r\n\r\n  unfollow(id: string) {\r\n    this.store.dispatch(ProfileActions.unFollow({ id }));\r\n  }\r\n}\r\n","import { User, Profile } from '@botmind-test/api';\nimport { AuthFacade } from '@botmind-test/auth';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\n\nimport { ProfileFacade } from './+state/profile.facade';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  profile$: Observable<Profile>;\n  currentUser$: Observable<User>;\n  isUser$: Subject<boolean> = new Subject();\n  unsubscribe$: Subject<void> = new Subject();\n  following: boolean;\n  username: string;\n\n  constructor(private facade: ProfileFacade, private authFacade: AuthFacade) {}\n\n  ngOnInit() {\n    this.profile$ = this.facade.profile$;\n    this.currentUser$ = this.authFacade.user$;\n    combineLatest([this.profile$, this.currentUser$])\n      .pipe(\n        tap(([p, u]) => {\n          this.username = p.username;\n          this.following = p.following;\n        }),\n        map(([p, u]) => p.username === u.username),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((isUser) => this.isUser$.next(isUser));\n  }\n\n  toggleFollowing() {\n    if (this.following) {\n      this.facade.unfollow(this.username);\n    } else {\n      this.facade.follow(this.username);\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","<div class=\"profile-page\">\r\n  <div class=\"user-info\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n          <img [src]=\"(profile$ | async)?.image\" class=\"user-img\" />\r\n          <h4 [hidden]=\"(profile$ | async).loading\">\r\n            {{ (profile$ | async)?.username }}\r\n          </h4>\r\n          <p>{{ (profile$ | async)?.bio }}</p>\r\n          <button\r\n            [hidden]=\"isUser$ | async\"\r\n            class=\"btn btn-sm action-btn\"\r\n            [ngClass]=\"{\r\n              'btn-outline-secondary': !(profile$ | async).following,\r\n              'btn-secondary': (profile$ | async).following\r\n            }\"\r\n            (click)=\"toggleFollowing()\"\r\n          >\r\n            <i class=\"ion-plus-round\"></i>\r\n            &nbsp; {{ (profile$ | async).following ? 'Unfollow' : 'Follow' }}\r\n            {{ (profile$ | async).username }}\r\n          </button>\r\n          <a\r\n            [routerLink]=\"['/settings']\"\r\n            [hidden]=\"(isUser$ | async) === false\"\r\n            class=\"btn btn-sm btn-outline-secondary action-btn\"\r\n          >\r\n            <i class=\"ion-gear-a\"></i> Edit Profile Settings\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n        <div class=\"articles-toggle\">\r\n          <ul class=\"nav nav-pills outline-active\">\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                [routerLink]=\"['/profile', (profile$ | async).username]\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                >My Articles</a\r\n              >\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                [routerLink]=\"['/profile', (profile$ | async).username, 'favorites']\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                >Favorited Articles</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { articleListInitialState } from '@botmind-test/article-list';\nimport * as fromArticleList from '@botmind-test/article-list';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { getProfile } from './+state/profile.actions';\nimport { Profile } from '@botmind-test/api';\n\n@Injectable()\nexport class ProfileResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.params['username'];\n    this.store.dispatch(getProfile({ id: username }));\n  }\n}\n\n@Injectable()\nexport class ProfileArticlesResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.params['username'];\n    this.store.dispatch(\n      fromArticleList.setListConfig({\n        config: {\n          ...articleListInitialState.listConfig,\n          filters: {\n            ...articleListInitialState.listConfig.filters,\n            author: username,\n          },\n        },\n      }),\n    );\n  }\n}\n\n@Injectable()\nexport class ProfileFavoritesResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.parent.params['username'];\n    this.store.dispatch(\n      fromArticleList.setListConfig({\n        config: {\n          ...articleListInitialState.listConfig,\n          filters: {\n            ...articleListInitialState.listConfig.filters,\n            favorited: username,\n          },\n        },\n      }),\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-articles',\r\n  templateUrl: './profile-articles.component.html',\r\n  styleUrls: ['./profile-articles.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileArticlesComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<app-article-list> </app-article-list>\r\n","import { createFeatureSelector, Action, createReducer, on } from '@ngrx/store';\nimport { Profile } from '@botmind-test/api';\nimport * as ProfileActions from './profile.actions';\n\nexport const profileFeatureKey = 'profile';\n\nexport interface ProfileState {\n  readonly [profileFeatureKey]: Profile;\n}\n\nexport const profileInitialState: Profile = {\n  username: '',\n  bio: '',\n  image: '',\n  following: false,\n  loading: false,\n};\n\nexport const getProfile = createFeatureSelector<Profile>(profileFeatureKey);\n\nconst reducer = createReducer(\n  profileInitialState,\n  on(ProfileActions.getProfile, (state, action) => ({ ...state, loading: true })),\n  on(ProfileActions.getProfileSuccess, (state, action) => ({ ...action.profile, loading: false })),\n  on(ProfileActions.getProfileFail, (state, action) => profileInitialState),\n  on(ProfileActions.followSuccess, ProfileActions.unFollowSuccess, (state, action) => action.profile),\n);\n\nexport function profileReducer(state: Profile | undefined, action: Action): Profile {\n  return reducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Profile } from '@botmind-test/api';\n\nexport const getProfile = createAction('[profile] GET_PROFILE', props<{ id: string }>());\nexport const getProfileSuccess = createAction('[profile] GET_PROFILE_SUCCESS', props<{ profile: Profile }>());\nexport const getProfileFail = createAction('[profile] GET_PROFILE_FAIL', props<{ error: Error }>());\nexport const follow = createAction('[profile] FOLLOW', props<{ id: string }>());\nexport const followSuccess = createAction('[profile] FOLLOW_SUCCESS', props<{ profile: Profile }>());\nexport const followFail = createAction('[profile] FOLLOW_FAIL', props<{ error: Error }>());\nexport const unFollow = createAction('[profile] UNFOLLOW', props<{ id: string }>());\nexport const unFollowSuccess = createAction('[profile] UNFOLLOW_SUCCESS', props<{ profile: Profile }>());\nexport const unFollowFail = createAction('[profile] UNFOLLOW_FAIL', props<{ error: Error }>());\n","import { ApiService, Profile } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private apiService: ApiService) {}\n\n  getProfile(username: string): Observable<Profile> {\n    return this.apiService.get('/profiles/' + username).pipe(map((data: { profile: Profile }) => data.profile));\n  }\n}\n","import { ActionsService } from '@botmind-test/shared';\nimport { ProfileService } from '../profile.service';\nimport { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport * as ProfileActions from './profile.actions';\n\n@Injectable()\nexport class ProfileEffects {\n  getProfile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.getProfile),\n      groupBy((action) => action.id),\n      mergeMap((group) =>\n        group.pipe(\n          map((action) => action.id),\n          switchMap((username) =>\n            this.profileService.getProfile(username).pipe(\n              map((profile) => ProfileActions.getProfileSuccess({ profile })),\n              catchError((error) => of(ProfileActions.getProfileFail({ error }))),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  follow$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.follow),\n      map((action) => action.id),\n      concatMap((slug) =>\n        this.actionsService.followUser(slug).pipe(\n          map((response) => ProfileActions.followSuccess({ profile: response.profile })),\n          catchError((error) => of(ProfileActions.followFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  unFollow$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.unFollow),\n      map((action) => action.id),\n      concatMap((slug) =>\n        this.actionsService.unfollowUser(slug).pipe(\n          map((response) => ProfileActions.unFollowSuccess({ profile: response.profile })),\n          catchError((error) => of(ProfileActions.unFollowFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private actionsService: ActionsService,\n    private profileService: ProfileService,\n  ) {}\n}\n","import { ArticleListModule } from '@botmind-test/article-list';\nimport { AuthGuardService } from '@botmind-test/auth';\nimport { SharedModule } from '@botmind-test/shared';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ProfileEffects } from './+state/profile.effects';\nimport { ProfileFacade } from './+state/profile.facade';\nimport { profileInitialState, profileReducer, profileFeatureKey } from './+state/profile.reducer';\nimport { ProfileArticlesComponent } from './profile-articles.component';\nimport {\n  ProfileArticlesResolverService,\n  ProfileFavoritesResolverService,\n  ProfileResolverService,\n} from './profile-resolver.service';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileService } from './profile.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArticleListModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProfileComponent,\n        resolve: { ProfileResolverService },\n        canActivate: [AuthGuardService],\n        children: [\n          {\n            path: '',\n            component: ProfileArticlesComponent,\n            resolve: { ProfileArticlesResolverService },\n          },\n          {\n            path: 'favorites',\n            component: ProfileArticlesComponent,\n            resolve: { ProfileFavoritesResolverService },\n          },\n        ],\n      },\n    ]),\n    StoreModule.forFeature(profileFeatureKey, profileReducer, {\n      initialState: profileInitialState,\n    }),\n    EffectsModule.forFeature([ProfileEffects]),\n  ],\n  providers: [\n    ProfileEffects,\n    ProfileService,\n    ProfileResolverService,\n    ProfileArticlesResolverService,\n    ProfileFavoritesResolverService,\n    ProfileFacade,\n  ],\n  declarations: [ProfileComponent, ProfileArticlesComponent],\n})\nexport class ProfileModule {}\n"]}