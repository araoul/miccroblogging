{"version":3,"sources":["./libs/shared/src/index.ts","./libs/article-list/src/lib/+state/article-list.selectors.ts","./libs/article-list/src/index.ts","./libs/shared/src/lib/actions.service.ts","./libs/shared/src/lib/shared.module.ts","./libs/article-list/src/lib/+state/article-list.reducer.ts","./libs/article-list/src/lib/+state/article-list.facade.ts","./libs/shared/src/lib/pager/pager.component.ts","./libs/shared/src/lib/pager/pager.component.html","./libs/article-list/src/lib/article-list.service.ts","./libs/article-list/src/lib/article-list.component.ts","./libs/article-list/src/lib/article-list.component.html","./libs/article-list/src/lib/article-list-item/article-list-item.component.ts","./libs/article-list/src/lib/article-list-item/article-list-item.component.html","./libs/article-list/src/lib/+state/article-list.actions.ts","./libs/article-list/src/lib/+state/article-list.effects.ts","./libs/article-list/src/lib/article-list.module.ts"],"names":[],"mappings":"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","file":"default~botmind-test-home-src-lib-home-module~botmind-test-profile-src-lib-profile-module-es2015.js","sourcesContent":["export { SharedModule } from './lib/shared.module';\r\nexport { ActionsService } from './lib/actions.service';\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { ArticleList, articleListFeatureKey } from './article-list.reducer';\r\n\r\nconst getArticleList = createFeatureSelector<ArticleList>(articleListFeatureKey);\r\nexport const getListConfig = createSelector(getArticleList, (state: ArticleList) => state.listConfig);\r\nexport const getArticles = createSelector(getArticleList, (state: ArticleList) => state.articles.entities);\r\nexport const getArticlesCount = createSelector(getArticleList, (state: ArticleList) => state.articles.articlesCount);\r\nexport const isLoading = createSelector(getArticleList, (state: ArticleList) => state.articles.loading);\r\n\r\nexport const articleListQuery = {\r\n  getListConfig,\r\n  getArticles,\r\n  getArticlesCount,\r\n  isLoading,\r\n};\r\n","export { ArticleListModule } from './lib/article-list.module';\r\nexport * from './lib/+state/article-list.reducer';\r\nexport * from './lib/+state/article-list.actions';\r\nexport * from './lib/+state/article-list.facade';\r\n","import { ApiService, ProfileResponse, SingleArticleResponse } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ActionsService {\n  constructor(private apiService: ApiService) {}\n\n  followUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.post<ProfileResponse, void>('/profiles/' + username + '/follow', null);\n  }\n\n  unfollowUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.delete<ProfileResponse>('/profiles/' + username + '/follow');\n  }\n\n  favorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.post<SingleArticleResponse, void>('/articles/' + slug + '/favorite', null);\n  }\n\n  unfavorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.delete<SingleArticleResponse>('/articles/' + slug + '/favorite');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PagerComponent } from './pager/pager.component';\r\nimport { ActionsService } from './actions.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PagerComponent],\r\n  exports: [PagerComponent],\r\n  providers: [ActionsService],\r\n})\r\nexport class SharedModule {}\r\n","import { Article } from '@botmind-test/api';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as ArticleListActions from './article-list.actions';\n\nexport const articleListFeatureKey = 'articles-list';\n\nexport interface ArticleList {\n  listConfig: ArticleListConfig;\n  articles: Articles;\n}\n\nexport interface ArticleListState {\n  readonly [articleListFeatureKey]: ArticleList;\n}\n\nexport interface ArticleListConfig {\n  type: ListType;\n  currentPage: number;\n  filters: Filters;\n}\n\nexport interface Filters {\n  tag?: string;\n  author?: string;\n  favorited?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport type ListType = 'ALL' | 'FEED';\n\nexport interface Articles {\n  entities: Article[];\n  articlesCount: number;\n  loaded: boolean;\n  loading: boolean;\n}\n\nexport const articleListInitialState: ArticleList = {\n  listConfig: {\n    type: 'ALL',\n    currentPage: 1,\n    filters: {\n      limit: 10,\n    },\n  },\n  articles: {\n    entities: [],\n    articlesCount: 0,\n    loaded: false,\n    loading: false,\n  },\n};\n\nconst reducer = createReducer(\n  articleListInitialState,\n  on(ArticleListActions.setListPage, (state, action) => {\n    const filters = {\n      ...state.listConfig.filters,\n      offset: state.listConfig.filters.limit * (action.page - 1),\n    };\n    const listConfig = {\n      ...state.listConfig,\n      currentPage: action.page,\n      filters,\n    };\n    return { ...state, listConfig };\n  }),\n  on(ArticleListActions.setListConfig, (state, action) => ({\n    ...state,\n    listConfig: action.config,\n  })),\n  on(ArticleListActions.loadArticles, (state, _) => {\n    const articles = { ...state.articles, loading: true };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.loadArticlesSuccess, (state, action) => {\n    const articles = {\n      ...state.articles,\n      entities: action.articles,\n      articlesCount: action.articlesCount,\n      loading: false,\n      loaded: true,\n    };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.loadArticlesFail, (state, _) => {\n    const articles = {\n      ...state.articles,\n      entities: [],\n      articlesCount: 0,\n      loading: false,\n      loaded: true,\n    };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.unFavoriteSuccess, ArticleListActions.favoriteSuccess, (state, action) => ({\n    ...state,\n    articles: replaceArticle(state.articles, action.article),\n  })),\n);\n\nfunction replaceArticle(articles: Articles, payload: Article): Articles {\n  const articleIndex = articles.entities.findIndex((a) => a.slug === payload.slug);\n  const entities = [\n    ...articles.entities.slice(0, articleIndex),\n    Object.assign({}, articles.entities[articleIndex], payload),\n    ...articles.entities.slice(articleIndex + 1),\n  ];\n  return { ...articles, entities, loading: false, loaded: true };\n}\n\nexport function articleListReducer(state: ArticleList | undefined, action: Action): ArticleList {\n  return reducer(state, action);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { ArticleListState, ArticleListConfig } from './article-list.reducer';\nimport { articleListQuery } from './article-list.selectors';\nimport * as ArticleListActions from './article-list.actions';\nimport { withLatestFrom, map } from 'rxjs/operators';\nimport { go } from '@botmind-test/ngrx-router';\n@Injectable()\nexport class ArticleListFacade {\n  articles$ = this.store.select(articleListQuery.getArticles);\n  listConfig$ = this.store.select(articleListQuery.getListConfig);\n  isLoading$ = this.store.select(articleListQuery.isLoading);\n  articlesCount$ = this.store.select(articleListQuery.getArticlesCount);\n  totalPages$ = this.articlesCount$.pipe(\n    withLatestFrom(this.listConfig$),\n    map(([articlesCount, config]) => {\n      return Array.from(new Array(Math.ceil(articlesCount / config.filters.limit)), (val, index) => index + 1);\n    }),\n  );\n\n  constructor(private store: Store<ArticleListState>) {}\n\n  favorite(slug: string) {\n    this.store.dispatch(ArticleListActions.favorite({ slug }));\n  }\n\n  unFavorite(slug: string) {\n    this.store.dispatch(ArticleListActions.unFavorite({ slug }));\n  }\n\n  navigateToArticle(slug: string) {\n    this.store.dispatch(go({ to: { path: ['/article', slug] } }));\n  }\n\n  setPage(page: number) {\n    this.store.dispatch(ArticleListActions.setListPage({ page }));\n  }\n\n  setListConfig(config: ArticleListConfig) {\n    this.store.dispatch(ArticleListActions.setListConfig({ config }));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pager',\r\n  templateUrl: './pager.component.html',\r\n  styleUrls: ['./pager.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PagerComponent {\r\n  @Input() currentPage: number;\r\n  @Input() totalPages: number;\r\n  @Output() setPage: EventEmitter<number> = new EventEmitter();\r\n}\r\n","<ul class=\"pagination\">\r\n  <li\r\n    class=\"page-item\"\r\n    [ngClass]=\"{ active: pageNumber === currentPage }\"\r\n    *ngFor=\"let pageNumber of totalPages\"\r\n    (click)=\"setPage.emit(pageNumber)\"\r\n  >\r\n    <a class=\"page-link\">{{ pageNumber }}</a>\r\n  </li>\r\n</ul>\r\n","import { ApiService, Article } from '@botmind-test/api';\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ArticleListConfig } from './+state/article-list.reducer';\n\n@Injectable()\nexport class ArticleListService {\n  constructor(private apiService: ApiService) {}\n\n  query(config: ArticleListConfig): Observable<{ articles: Article[]; articlesCount: number }> {\n    return this.apiService.get(\n      '/articles' + (config.type === 'FEED' ? '/feed' : ''),\n      this.toHttpParams(config.filters),\n    );\n  }\n\n  private toHttpParams(params) {\n    return Object.getOwnPropertyNames(params).reduce((p, key) => p.set(key, params[key]), new HttpParams());\n  }\n}\n","import { Article } from '@botmind-test/api';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { withLatestFrom } from 'rxjs/operators';\n\nimport { ArticleListFacade } from './+state/article-list.facade';\nimport { ArticleListConfig } from './+state/article-list.reducer';\n\n@Component({\n  selector: 'app-article-list',\n  templateUrl: './article-list.component.html',\n  styleUrls: ['./article-list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleListComponent implements OnInit {\n  totalPages$: Observable<number[]>;\n  articles$: Observable<Article[]>;\n  listConfig$: Observable<ArticleListConfig>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private facade: ArticleListFacade) {}\n\n  ngOnInit() {\n    this.totalPages$ = this.facade.totalPages$;\n    this.articles$ = this.facade.articles$;\n    this.listConfig$ = this.facade.listConfig$;\n    this.isLoading$ = this.facade.isLoading$;\n  }\n\n  favorite(slug: string) {\n    this.facade.favorite(slug);\n  }\n\n  unFavorite(slug: string) {\n    this.facade.unFavorite(slug);\n  }\n\n  navigateToArticle(slug: string) {\n    this.facade.navigateToArticle(slug);\n  }\n\n  setPage(page: number) {\n    this.facade.setPage(page);\n  }\n}\n","<div class=\"app-article-preview\" [hidden]=\"(isLoading$ | async) === false\">\r\n  Loading articles...\r\n</div>\r\n\r\n<div class=\"app-article-preview\" [hidden]=\"(isLoading$ | async) || (articles$ | async).length > 0\">\r\n  No articles are here... yet.\r\n</div>\r\n\r\n<app-article-list-item\r\n  [hidden]=\"isLoading$ | async\"\r\n  (navigateToArticle)=\"navigateToArticle($event)\"\r\n  (unFavorite)=\"unFavorite($event)\"\r\n  (favorite)=\"favorite($event)\"\r\n  *ngFor=\"let article of articles$ | async\"\r\n  [article]=\"article\"\r\n>\r\n</app-article-list-item>\r\n\r\n<app-pager\r\n  (setPage)=\"setPage($event)\"\r\n  [hidden]=\"(totalPages$ | async)?.length <= 1 || (isLoading$ | async)\"\r\n  [currentPage]=\"(listConfig$ | async).currentPage\"\r\n  [totalPages]=\"totalPages$ | async\"\r\n></app-pager>\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Article } from '@botmind-test/api';\n\n@Component({\n  selector: 'app-article-list-item',\n  templateUrl: './article-list-item.component.html',\n  styleUrls: ['./article-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleListItemComponent {\n  @Input() article: Article;\n  @Output() favorite: EventEmitter<string> = new EventEmitter();\n  @Output() unFavorite: EventEmitter<string> = new EventEmitter();\n  @Output() navigateToArticle: EventEmitter<string> = new EventEmitter();\n\n  toggleFavorite(article: Article) {\n    if (article.favorited) {\n      this.unFavorite.emit(article.slug);\n    } else {\n      this.favorite.emit(article.slug);\n    }\n  }\n}\n","<div class=\"article-preview\">\r\n  <div class=\"article-meta\">\r\n    <a>\r\n      <img [src]=\"article.author.image\" />\r\n    </a>\r\n    <div class=\"info\">\r\n      <a class=\"author\" [routerLink]=\"['/profile', article.author.username]\">\r\n        {{ article.author.username }}\r\n      </a>\r\n      <span class=\"date\">\r\n        {{ article.createdAt | date: 'longDate' }}\r\n      </span>\r\n    </div>\r\n    <button\r\n      [ngClass]=\"{\r\n        'btn-outline-primary': !article.favorited,\r\n        'btn-primary': article.favorited\r\n      }\"\r\n      class=\"btn btn-sm pull-xs-right\"\r\n      (click)=\"toggleFavorite(article)\"\r\n    >\r\n      <i class=\"ion-heart\"></i>\r\n      <div class=\"info\">{{ article.favoritesCount }}</div>\r\n    </button>\r\n  </div>\r\n  <a (click)=\"navigateToArticle.emit(article.slug)\" class=\"preview-link\">\r\n    <h1 data-e2e-id=\"article-list-title\">{{ article.title }}</h1>\r\n    <p>{{ article.description }}</p>\r\n    <span>Read more...</span>\r\n    <ul class=\"tag-list\">\r\n      <li class=\"tag-default tag-pill tag-outline\" *ngFor=\"let tag of article.tagList\">\r\n        {{ tag }}\r\n      </li>\r\n    </ul>\r\n  </a>\r\n</div>\r\n","import { createAction, props } from '@ngrx/store';\nimport { Article } from '@botmind-test/api';\n\nimport { ArticleListConfig } from './article-list.reducer';\n\nexport const setListPage = createAction('[article-list] SET_LIST_PAGE', props<{ page: number }>());\n\nexport const setListConfig = createAction('[article-list] SET_LIST_CONFIG', props<{ config: ArticleListConfig }>());\n\nexport const loadArticles = createAction('[article-list] LOAD_ARTICLES');\n\nexport const loadArticlesSuccess = createAction(\n  '[article-list] LOAD_ARTICLES_SUCCESS',\n  props<{ articles: Article[]; articlesCount: number }>(),\n);\n\nexport const loadArticlesFail = createAction('[article-list] LOAD_ARTICLES_FAIL', props<{ error: Error }>());\n\nexport const favorite = createAction('[article-list] FAVORITE', props<{ slug: string }>());\n\nexport const favoriteSuccess = createAction('[article-list] FAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const favoriteFail = createAction('[article-list] FAVORITE_FAIL', props<{ error: Error }>());\n\nexport const unFavorite = createAction('[article-list] UNFAVORITE', props<{ slug: string }>());\n\nexport const unFavoriteSuccess = createAction('[article-list] UNFAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const unFavoriteFail = createAction('[article-list] UNFAVORITE_FAIL', props<{ error: Error }>());\n","import { ActionsService } from '@botmind-test/shared';\nimport { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, withLatestFrom } from 'rxjs/operators';\n\nimport { ArticleListService } from '../article-list.service';\nimport * as ArticleListActions from './article-list.actions';\n\nimport { ArticleListFacade } from './article-list.facade';\n\n@Injectable()\nexport class ArticleListEffects {\n  setListPage = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.setListPage),\n      map(() => ArticleListActions.loadArticles()),\n    ),\n  );\n\n  setListTag = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.setListConfig),\n      map(() => ArticleListActions.loadArticles()),\n    ),\n  );\n\n  loadArticles = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.loadArticles),\n      withLatestFrom(this.facade.listConfig$),\n      concatMap(([_, config]) =>\n        this.articleListService.query(config).pipe(\n          map((results) =>\n            ArticleListActions.loadArticlesSuccess({\n              articles: results.articles,\n              articlesCount: results.articlesCount,\n            }),\n          ),\n          catchError((error) => of(ArticleListActions.loadArticlesFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  favorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.favorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.favorite(slug).pipe(\n          map((response) => ArticleListActions.favoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleListActions.favoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  unFavorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.unFavorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.unfavorite(slug).pipe(\n          map((response) => ArticleListActions.unFavoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleListActions.unFavoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private articleListService: ArticleListService,\n    private actionsService: ActionsService,\n    private facade: ArticleListFacade,\n  ) {}\n}\n","import { SharedModule } from '@botmind-test/shared';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ArticleListEffects } from './+state/article-list.effects';\nimport { ArticleListFacade } from './+state/article-list.facade';\nimport { articleListInitialState, articleListReducer, articleListFeatureKey } from './+state/article-list.reducer';\nimport { ArticleListItemComponent } from './article-list-item/article-list-item.component';\nimport { ArticleListComponent } from './article-list.component';\nimport { ArticleListService } from './article-list.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    StoreModule.forFeature(articleListFeatureKey, articleListReducer, {\n      initialState: articleListInitialState,\n    }),\n    EffectsModule.forFeature([ArticleListEffects]),\n  ],\n  declarations: [ArticleListComponent, ArticleListItemComponent],\n  providers: [ArticleListService, ArticleListEffects, ArticleListFacade],\n  exports: [ArticleListComponent],\n})\nexport class ArticleListModule {}\n"],"sourceRoot":"webpack:///"}