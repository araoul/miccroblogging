{"version":3,"sources":["webpack:///libs/home/src/lib/+state/home.facade.ts","webpack:///libs/home/src/lib/home.service.ts","webpack:///libs/home/src/lib/tags-list/tags-list.component.ts","webpack:///libs/home/src/lib/tags-list/tags-list.component.html","webpack:///libs/home/src/lib/+state/home.actions.ts","webpack:///libs/home/src/lib/+state/home.reducer.ts","webpack:///libs/home/src/lib/home.module.ts","webpack:///libs/home/src/lib/home-resolver.service.ts","webpack:///libs/home/src/lib/+state/home.effects.ts","webpack:///libs/home/src/lib/+state/home.selectors.ts","webpack:///libs/home/src/lib/home.component.ts","webpack:///libs/home/src/lib/home.component.html"],"names":["HomeFacade","store","home$","select","getHome","tags$","getTags","dispatch","HomeService","apiService","get","setListTag","TagsListComponent","selector","templateUrl","styleUrls","changeDetection","OnPush","tags","loadTags","loadTagsSuccess","loadTagsFail","homeFeatureKey","homeInitialState","reducer","state","action","homeReducer","HomeModule","forChild","path","pathMatch","component","resolve","HomeResolverService","forFeature","initialState","imports","declarations","providers","facade","route","HomeEffects","actions$","homeService","loadTags$","pipe","results","error","homeQuery","HomeComponent","router","articleListFacade","authFacade","unsubscribe$","isLoggedIn$","subscribe","isLoggedIn","isAuthenticated","getArticles","listConfig$","type","setListConfig","listConfig","setListTo","tag","filters","next","complete"],"mappings":"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","file":"botmind-test-home-src-lib-home-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { homeQuery } from './home.selectors';\r\nimport * as HomeActions from './home.actions';\r\nimport { HomeState } from './home.reducer';\r\n\r\n@Injectable()\r\nexport class HomeFacade {\r\n  home$ = this.store.select(homeQuery.getHome);\r\n  tags$ = this.store.select(homeQuery.getTags);\r\n\r\n  constructor(private store: Store<HomeState>) {}\r\n\r\n  loadTags() {\r\n    this.store.dispatch(HomeActions.loadTags());\r\n  }\r\n}\r\n","import { ApiService } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HomeService {\n  constructor(private apiService: ApiService) {}\n\n  getTags(): Observable<{ tags: string[] }> {\n    return this.apiService.get('/tags');\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tags-list',\r\n  templateUrl: './tags-list.component.html',\r\n  styleUrls: ['./tags-list.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TagsListComponent {\r\n  @Input() tags: string[];\r\n  @Output() setListTag: EventEmitter<string> = new EventEmitter();\r\n}\r\n","<p>Popular Tags</p>\r\n\r\n<div class=\"tag-list\">\r\n  <a *ngFor=\"let tag of tags\" (click)=\"setListTag.emit(tag)\" class=\"tag-pill tag-default\">{{ tag }}</a>\r\n</div>\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const loadTags = createAction('[home] LOAD_TAGS');\r\nexport const loadTagsSuccess = createAction('[home] LOAD_TAGS_SUCCESS', props<{ tags: string[] }>());\r\nexport const loadTagsFail = createAction('[home] LOAD_TAGS_FAIL', props<{ error: Error }>());\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as HomeActions from './home.actions';\r\nexport const homeFeatureKey = 'home';\r\n\r\nexport interface HomeState {\r\n  readonly [homeFeatureKey]: Home;\r\n}\r\n\r\nexport interface Home {\r\n  tags: string[];\r\n}\r\n\r\nexport const homeInitialState: Home = {\r\n  tags: [],\r\n};\r\n\r\nconst reducer = createReducer(\r\n  homeInitialState,\r\n  on(HomeActions.loadTagsSuccess, (state, action) => ({ ...state, tags: action.tags })),\r\n  on(HomeActions.loadTagsFail, (state, action) => ({ ...state, tags: [] })),\r\n);\r\n\r\nexport function homeReducer(state: Home | undefined, action: Action): Home {\r\n  return reducer(state, action);\r\n}\r\n","import { ArticleListModule } from '@botmind-test/article-list';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { HomeEffects } from './+state/home.effects';\nimport { HomeFacade } from './+state/home.facade';\nimport { homeInitialState, homeReducer, homeFeatureKey } from './+state/home.reducer';\nimport { HomeResolverService } from './home-resolver.service';\nimport { HomeComponent } from './home.component';\nimport { HomeService } from './home.service';\nimport { TagsListComponent } from './tags-list/tags-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArticleListModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: HomeComponent,\n        resolve: { HomeResolverService },\n      },\n    ]),\n    StoreModule.forFeature(homeFeatureKey, homeReducer, {\n      initialState: homeInitialState,\n    }),\n    EffectsModule.forFeature([HomeEffects]),\n  ],\n  declarations: [HomeComponent, TagsListComponent],\n  providers: [HomeEffects, HomeResolverService, HomeService, HomeFacade],\n})\nexport class HomeModule {}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { HomeFacade } from './+state/home.facade';\r\nimport { Home } from './+state/home.reducer';\r\n\r\n@Injectable()\r\nexport class HomeResolverService implements Resolve<Home> {\r\n  constructor(private facade: HomeFacade) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n    this.facade.loadTags();\r\n    return of(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport { HomeService } from '../home.service';\r\nimport * as HomeActions from './home.actions';\r\n\r\n@Injectable()\r\nexport class HomeEffects {\r\n  loadTags$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(HomeActions.loadTags),\r\n      switchMap(() =>\r\n        this.homeService.getTags().pipe(\r\n          map(results => HomeActions.loadTagsSuccess({ tags: results.tags })),\r\n          catchError(error => of(HomeActions.loadTagsFail(error))),\r\n        ),\r\n      ),\r\n    ),\r\n  );\r\n\r\n  constructor(private actions$: Actions, private homeService: HomeService) {}\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { Home, homeFeatureKey } from './home.reducer';\r\n\r\nexport const getHome = createFeatureSelector<Home>(homeFeatureKey);\r\nexport const getTags = createSelector(getHome, (state: Home) => state.tags);\r\n\r\nexport const homeQuery = {\r\n  getTags,\r\n  getHome,\r\n};\r\n","import { Observable, Subject } from 'rxjs';\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport * as fromHome from './+state/home.reducer';\nimport * as fromAuth from '@botmind-test/auth';\nimport { withLatestFrom, tap, takeUntil } from 'rxjs/operators';\nimport * as fromArticleList from '@botmind-test/article-list';\nimport { ArticleListConfig } from '@botmind-test/article-list';\nimport { articleListInitialState, ArticleListFacade } from '@botmind-test/article-list';\nimport { AuthFacade } from '@botmind-test/auth';\nimport { HomeFacade } from './+state/home.facade';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  listConfig$: Observable<ArticleListConfig>;\n  tags$: Observable<string[]>;\n  isAuthenticated: boolean;\n  unsubscribe$: Subject<void> = new Subject();\n\n  constructor(\n    private facade: HomeFacade,\n    private router: Router,\n    private articleListFacade: ArticleListFacade,\n    private authFacade: AuthFacade,\n  ) {}\n\n  ngOnInit() {\n    this.authFacade.isLoggedIn$.pipe(takeUntil(this.unsubscribe$)).subscribe((isLoggedIn) => {\n      this.isAuthenticated = isLoggedIn;\n      this.getArticles();\n    });\n    this.listConfig$ = this.articleListFacade.listConfig$;\n    this.tags$ = this.facade.tags$;\n  }\n\n  setListTo(type: string = 'ALL') {\n    this.articleListFacade.setListConfig(<ArticleListConfig>{\n      ...articleListInitialState.listConfig,\n      type,\n    });\n  }\n\n  getArticles() {\n    if (this.isAuthenticated) {\n      this.setListTo('FEED');\n    } else {\n      this.setListTo('ALL');\n    }\n  }\n\n  setListTag(tag: string) {\n    this.articleListFacade.setListConfig(<ArticleListConfig>{\n      ...articleListInitialState.listConfig,\n      filters: {\n        ...articleListInitialState.listConfig.filters,\n        tag,\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","<div class=\"home-page\">\n  <div class=\"banner\">\n    <div class=\"container\">\n      <h1 class=\"logo-font\">microblogging</h1>\n      <p>A place to share your knowledge.</p>\n    </div>\n  </div>\n\n  <div class=\"container page\">\n    <div class=\"row\">\n      <div class=\"col-md-9\">\n        <div class=\"feed-toggle\">\n          <ul class=\"nav nav-pills outline-active\">\n            <li class=\"nav-item\">\n              <a\n                [ngClass]=\"{ active: (listConfig$ | async)?.type === 'FEED' }\"\n                class=\"nav-link\"\n                (click)=\"setListTo('FEED')\"\n                >Your Feed</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                [ngClass]=\"{\n                  active: (listConfig$ | async)?.type === 'ALL' && !(listConfig$ | async).filters?.tag\n                }\"\n                class=\"nav-link\"\n                (click)=\"setListTo('ALL')\"\n                >Global Feed</a\n              >\n            </li>\n            <li class=\"nav-item\" [hidden]=\"!(listConfig$ | async).filters?.tag\">\n              <a class=\"nav-link active\">\n                <i class=\"ion-pound\"></i>\n                {{ (listConfig$ | async).filters?.tag }}\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <app-article-list></app-article-list>\n      </div>\n\n      <div class=\"col-md-3\">\n        <div class=\"sidebar\">\n          <app-tags-list (setListTag)=\"setListTag($event)\" [tags]=\"tags$ | async\"></app-tags-list>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]}