{"version":3,"sources":["./libs/profile/src/lib/+state/profile.facade.ts","./libs/profile/src/lib/profile.component.ts","./libs/profile/src/lib/profile.component.html","./libs/profile/src/lib/profile-resolver.service.ts","./libs/profile/src/lib/profile-articles.component.ts","./libs/profile/src/lib/profile-articles.component.html","./libs/profile/src/lib/+state/profile.reducer.ts","./libs/profile/src/lib/+state/profile.actions.ts","./libs/profile/src/lib/profile.service.ts","./libs/profile/src/lib/+state/profile.effects.ts","./libs/profile/src/lib/profile.module.ts"],"names":[],"mappings":"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","file":"botmind-test-profile-src-lib-profile-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as ProfileActions from './profile.actions';\r\n\r\nimport { getProfile, ProfileState } from './profile.reducer';\r\n\r\n@Injectable()\r\nexport class ProfileFacade {\r\n  profile$ = this.store.select(getProfile);\r\n\r\n  constructor(private store: Store<ProfileState>) {}\r\n\r\n  follow(id: string) {\r\n    this.store.dispatch(ProfileActions.follow({ id }));\r\n  }\r\n\r\n  unfollow(id: string) {\r\n    this.store.dispatch(ProfileActions.unFollow({ id }));\r\n  }\r\n}\r\n","import { User, Profile } from '@botmind-test/api';\nimport { AuthFacade } from '@botmind-test/auth';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\n\nimport { ProfileFacade } from './+state/profile.facade';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  profile$: Observable<Profile>;\n  currentUser$: Observable<User>;\n  isUser$: Subject<boolean> = new Subject();\n  unsubscribe$: Subject<void> = new Subject();\n  following: boolean;\n  username: string;\n\n  constructor(private facade: ProfileFacade, private authFacade: AuthFacade) {}\n\n  ngOnInit() {\n    this.profile$ = this.facade.profile$;\n    this.currentUser$ = this.authFacade.user$;\n    combineLatest([this.profile$, this.currentUser$])\n      .pipe(\n        tap(([p, u]) => {\n          this.username = p.username;\n          this.following = p.following;\n        }),\n        map(([p, u]) => p.username === u.username),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((isUser) => this.isUser$.next(isUser));\n  }\n\n  toggleFollowing() {\n    if (this.following) {\n      this.facade.unfollow(this.username);\n    } else {\n      this.facade.follow(this.username);\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","<div class=\"profile-page\">\r\n  <div class=\"user-info\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n          <img [src]=\"(profile$ | async)?.image\" class=\"user-img\" />\r\n          <h4 [hidden]=\"(profile$ | async).loading\">\r\n            {{ (profile$ | async)?.username }}\r\n          </h4>\r\n          <p>{{ (profile$ | async)?.bio }}</p>\r\n          <button\r\n            [hidden]=\"isUser$ | async\"\r\n            class=\"btn btn-sm action-btn\"\r\n            [ngClass]=\"{\r\n              'btn-outline-secondary': !(profile$ | async).following,\r\n              'btn-secondary': (profile$ | async).following\r\n            }\"\r\n            (click)=\"toggleFollowing()\"\r\n          >\r\n            <i class=\"ion-plus-round\"></i>\r\n            &nbsp; {{ (profile$ | async).following ? 'Unfollow' : 'Follow' }}\r\n            {{ (profile$ | async).username }}\r\n          </button>\r\n          <a\r\n            [routerLink]=\"['/settings']\"\r\n            [hidden]=\"(isUser$ | async) === false\"\r\n            class=\"btn btn-sm btn-outline-secondary action-btn\"\r\n          >\r\n            <i class=\"ion-gear-a\"></i> Edit Profile Settings\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n        <div class=\"articles-toggle\">\r\n          <ul class=\"nav nav-pills outline-active\">\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                [routerLink]=\"['/profile', (profile$ | async).username]\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                >My Articles</a\r\n              >\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                [routerLink]=\"['/profile', (profile$ | async).username, 'favorites']\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{ exact: true }\"\r\n                >Favorited Articles</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { articleListInitialState } from '@botmind-test/article-list';\nimport * as fromArticleList from '@botmind-test/article-list';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { getProfile } from './+state/profile.actions';\nimport { Profile } from '@botmind-test/api';\n\n@Injectable()\nexport class ProfileResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.params['username'];\n    this.store.dispatch(getProfile({ id: username }));\n  }\n}\n\n@Injectable()\nexport class ProfileArticlesResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.params['username'];\n    this.store.dispatch(\n      fromArticleList.setListConfig({\n        config: {\n          ...articleListInitialState.listConfig,\n          filters: {\n            ...articleListInitialState.listConfig.filters,\n            author: username,\n          },\n        },\n      }),\n    );\n  }\n}\n\n@Injectable()\nexport class ProfileFavoritesResolverService implements Resolve<Profile> {\n  constructor(private store: Store<any>) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    const username = route.parent.params['username'];\n    this.store.dispatch(\n      fromArticleList.setListConfig({\n        config: {\n          ...articleListInitialState.listConfig,\n          filters: {\n            ...articleListInitialState.listConfig.filters,\n            favorited: username,\n          },\n        },\n      }),\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile-articles',\r\n  templateUrl: './profile-articles.component.html',\r\n  styleUrls: ['./profile-articles.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileArticlesComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<app-article-list> </app-article-list>\r\n","import { createFeatureSelector, Action, createReducer, on } from '@ngrx/store';\nimport { Profile } from '@botmind-test/api';\nimport * as ProfileActions from './profile.actions';\n\nexport const profileFeatureKey = 'profile';\n\nexport interface ProfileState {\n  readonly [profileFeatureKey]: Profile;\n}\n\nexport const profileInitialState: Profile = {\n  username: '',\n  bio: '',\n  image: '',\n  following: false,\n  loading: false,\n};\n\nexport const getProfile = createFeatureSelector<Profile>(profileFeatureKey);\n\nconst reducer = createReducer(\n  profileInitialState,\n  on(ProfileActions.getProfile, (state, action) => ({ ...state, loading: true })),\n  on(ProfileActions.getProfileSuccess, (state, action) => ({ ...action.profile, loading: false })),\n  on(ProfileActions.getProfileFail, (state, action) => profileInitialState),\n  on(ProfileActions.followSuccess, ProfileActions.unFollowSuccess, (state, action) => action.profile),\n);\n\nexport function profileReducer(state: Profile | undefined, action: Action): Profile {\n  return reducer(state, action);\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Profile } from '@botmind-test/api';\n\nexport const getProfile = createAction('[profile] GET_PROFILE', props<{ id: string }>());\nexport const getProfileSuccess = createAction('[profile] GET_PROFILE_SUCCESS', props<{ profile: Profile }>());\nexport const getProfileFail = createAction('[profile] GET_PROFILE_FAIL', props<{ error: Error }>());\nexport const follow = createAction('[profile] FOLLOW', props<{ id: string }>());\nexport const followSuccess = createAction('[profile] FOLLOW_SUCCESS', props<{ profile: Profile }>());\nexport const followFail = createAction('[profile] FOLLOW_FAIL', props<{ error: Error }>());\nexport const unFollow = createAction('[profile] UNFOLLOW', props<{ id: string }>());\nexport const unFollowSuccess = createAction('[profile] UNFOLLOW_SUCCESS', props<{ profile: Profile }>());\nexport const unFollowFail = createAction('[profile] UNFOLLOW_FAIL', props<{ error: Error }>());\n","import { ApiService, Profile } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private apiService: ApiService) {}\n\n  getProfile(username: string): Observable<Profile> {\n    return this.apiService.get('/profiles/' + username).pipe(map((data: { profile: Profile }) => data.profile));\n  }\n}\n","import { ActionsService } from '@botmind-test/shared';\nimport { ProfileService } from '../profile.service';\nimport { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport * as ProfileActions from './profile.actions';\n\n@Injectable()\nexport class ProfileEffects {\n  getProfile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.getProfile),\n      groupBy((action) => action.id),\n      mergeMap((group) =>\n        group.pipe(\n          map((action) => action.id),\n          switchMap((username) =>\n            this.profileService.getProfile(username).pipe(\n              map((profile) => ProfileActions.getProfileSuccess({ profile })),\n              catchError((error) => of(ProfileActions.getProfileFail({ error }))),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  follow$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.follow),\n      map((action) => action.id),\n      concatMap((slug) =>\n        this.actionsService.followUser(slug).pipe(\n          map((response) => ProfileActions.followSuccess({ profile: response.profile })),\n          catchError((error) => of(ProfileActions.followFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  unFollow$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ProfileActions.unFollow),\n      map((action) => action.id),\n      concatMap((slug) =>\n        this.actionsService.unfollowUser(slug).pipe(\n          map((response) => ProfileActions.unFollowSuccess({ profile: response.profile })),\n          catchError((error) => of(ProfileActions.unFollowFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private actionsService: ActionsService,\n    private profileService: ProfileService,\n  ) {}\n}\n","import { ArticleListModule } from '@botmind-test/article-list';\nimport { AuthGuardService } from '@botmind-test/auth';\nimport { SharedModule } from '@botmind-test/shared';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ProfileEffects } from './+state/profile.effects';\nimport { ProfileFacade } from './+state/profile.facade';\nimport { profileInitialState, profileReducer, profileFeatureKey } from './+state/profile.reducer';\nimport { ProfileArticlesComponent } from './profile-articles.component';\nimport {\n  ProfileArticlesResolverService,\n  ProfileFavoritesResolverService,\n  ProfileResolverService,\n} from './profile-resolver.service';\nimport { ProfileComponent } from './profile.component';\nimport { ProfileService } from './profile.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArticleListModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProfileComponent,\n        resolve: { ProfileResolverService },\n        canActivate: [AuthGuardService],\n        children: [\n          {\n            path: '',\n            component: ProfileArticlesComponent,\n            resolve: { ProfileArticlesResolverService },\n          },\n          {\n            path: 'favorites',\n            component: ProfileArticlesComponent,\n            resolve: { ProfileFavoritesResolverService },\n          },\n        ],\n      },\n    ]),\n    StoreModule.forFeature(profileFeatureKey, profileReducer, {\n      initialState: profileInitialState,\n    }),\n    EffectsModule.forFeature([ProfileEffects]),\n  ],\n  providers: [\n    ProfileEffects,\n    ProfileService,\n    ProfileResolverService,\n    ProfileArticlesResolverService,\n    ProfileFavoritesResolverService,\n    ProfileFacade,\n  ],\n  declarations: [ProfileComponent, ProfileArticlesComponent],\n})\nexport class ProfileModule {}\n"],"sourceRoot":"webpack:///"}