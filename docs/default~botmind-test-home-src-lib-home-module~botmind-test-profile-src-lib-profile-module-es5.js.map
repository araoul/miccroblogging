{"version":3,"sources":["webpack:///libs/shared/src/index.ts","webpack:///libs/article-list/src/lib/+state/article-list.selectors.ts","webpack:///libs/article-list/src/index.ts","webpack:///libs/shared/src/lib/actions.service.ts","webpack:///libs/shared/src/lib/shared.module.ts","webpack:///libs/article-list/src/lib/+state/article-list.reducer.ts","webpack:///libs/article-list/src/lib/+state/article-list.facade.ts","webpack:///libs/shared/src/lib/pager/pager.component.ts","webpack:///libs/shared/src/lib/pager/pager.component.html","webpack:///libs/article-list/src/lib/article-list.service.ts","webpack:///libs/article-list/src/lib/article-list.component.ts","webpack:///libs/article-list/src/lib/article-list.component.html","webpack:///libs/article-list/src/lib/article-list-item/article-list-item.component.ts","webpack:///libs/article-list/src/lib/article-list-item/article-list-item.component.html","webpack:///libs/article-list/src/lib/+state/article-list.actions.ts","webpack:///libs/article-list/src/lib/+state/article-list.effects.ts","webpack:///libs/article-list/src/lib/article-list.module.ts"],"names":["getArticleList","getListConfig","state","listConfig","getArticles","articles","entities","getArticlesCount","articlesCount","isLoading","loading","articleListQuery","ActionsService","apiService","username","post","slug","SharedModule","imports","declarations","exports","providers","articleListFeatureKey","articleListInitialState","type","currentPage","filters","limit","loaded","reducer","action","offset","page","config","_","replaceArticle","article","payload","articleIndex","findIndex","a","slice","Object","assign","articleListReducer","ArticleListFacade","store","articles$","select","listConfig$","isLoading$","articlesCount$","totalPages$","pipe","Array","from","Math","ceil","val","index","dispatch","to","path","setPage","PagerComponent","selector","templateUrl","styleUrls","changeDetection","OnPush","totalPages","ArticleListService","get","toHttpParams","params","getOwnPropertyNames","reduce","p","key","set","ArticleListComponent","facade","favorite","unFavorite","navigateToArticle","ArticleListItemComponent","favorited","emit","toggleFavorite","setListPage","setListConfig","loadArticles","loadArticlesSuccess","loadArticlesFail","favoriteSuccess","favoriteFail","unFavoriteSuccess","unFavoriteFail","ArticleListEffects","actions$","articleListService","actionsService","setListTag","query","results","error","response","unfavorite","ArticleListModule","forFeature","initialState"],"mappings":"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","file":"default~botmind-test-home-src-lib-home-module~botmind-test-profile-src-lib-profile-module-es5.js","sourcesContent":["export { SharedModule } from './lib/shared.module';\r\nexport { ActionsService } from './lib/actions.service';\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { ArticleList, articleListFeatureKey } from './article-list.reducer';\r\n\r\nconst getArticleList = createFeatureSelector<ArticleList>(articleListFeatureKey);\r\nexport const getListConfig = createSelector(getArticleList, (state: ArticleList) => state.listConfig);\r\nexport const getArticles = createSelector(getArticleList, (state: ArticleList) => state.articles.entities);\r\nexport const getArticlesCount = createSelector(getArticleList, (state: ArticleList) => state.articles.articlesCount);\r\nexport const isLoading = createSelector(getArticleList, (state: ArticleList) => state.articles.loading);\r\n\r\nexport const articleListQuery = {\r\n  getListConfig,\r\n  getArticles,\r\n  getArticlesCount,\r\n  isLoading,\r\n};\r\n","export { ArticleListModule } from './lib/article-list.module';\r\nexport * from './lib/+state/article-list.reducer';\r\nexport * from './lib/+state/article-list.actions';\r\nexport * from './lib/+state/article-list.facade';\r\n","import { ApiService, ProfileResponse, SingleArticleResponse } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ActionsService {\n  constructor(private apiService: ApiService) {}\n\n  followUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.post<ProfileResponse, void>('/profiles/' + username + '/follow', null);\n  }\n\n  unfollowUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.delete<ProfileResponse>('/profiles/' + username + '/follow');\n  }\n\n  favorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.post<SingleArticleResponse, void>('/articles/' + slug + '/favorite', null);\n  }\n\n  unfavorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.delete<SingleArticleResponse>('/articles/' + slug + '/favorite');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PagerComponent } from './pager/pager.component';\r\nimport { ActionsService } from './actions.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PagerComponent],\r\n  exports: [PagerComponent],\r\n  providers: [ActionsService],\r\n})\r\nexport class SharedModule {}\r\n","import { Article } from '@botmind-test/api';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as ArticleListActions from './article-list.actions';\n\nexport const articleListFeatureKey = 'articles-list';\n\nexport interface ArticleList {\n  listConfig: ArticleListConfig;\n  articles: Articles;\n}\n\nexport interface ArticleListState {\n  readonly [articleListFeatureKey]: ArticleList;\n}\n\nexport interface ArticleListConfig {\n  type: ListType;\n  currentPage: number;\n  filters: Filters;\n}\n\nexport interface Filters {\n  tag?: string;\n  author?: string;\n  favorited?: string;\n  limit?: number;\n  offset?: number;\n}\n\nexport type ListType = 'ALL' | 'FEED';\n\nexport interface Articles {\n  entities: Article[];\n  articlesCount: number;\n  loaded: boolean;\n  loading: boolean;\n}\n\nexport const articleListInitialState: ArticleList = {\n  listConfig: {\n    type: 'ALL',\n    currentPage: 1,\n    filters: {\n      limit: 10,\n    },\n  },\n  articles: {\n    entities: [],\n    articlesCount: 0,\n    loaded: false,\n    loading: false,\n  },\n};\n\nconst reducer = createReducer(\n  articleListInitialState,\n  on(ArticleListActions.setListPage, (state, action) => {\n    const filters = {\n      ...state.listConfig.filters,\n      offset: state.listConfig.filters.limit * (action.page - 1),\n    };\n    const listConfig = {\n      ...state.listConfig,\n      currentPage: action.page,\n      filters,\n    };\n    return { ...state, listConfig };\n  }),\n  on(ArticleListActions.setListConfig, (state, action) => ({\n    ...state,\n    listConfig: action.config,\n  })),\n  on(ArticleListActions.loadArticles, (state, _) => {\n    const articles = { ...state.articles, loading: true };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.loadArticlesSuccess, (state, action) => {\n    const articles = {\n      ...state.articles,\n      entities: action.articles,\n      articlesCount: action.articlesCount,\n      loading: false,\n      loaded: true,\n    };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.loadArticlesFail, (state, _) => {\n    const articles = {\n      ...state.articles,\n      entities: [],\n      articlesCount: 0,\n      loading: false,\n      loaded: true,\n    };\n    return { ...state, articles };\n  }),\n  on(ArticleListActions.unFavoriteSuccess, ArticleListActions.favoriteSuccess, (state, action) => ({\n    ...state,\n    articles: replaceArticle(state.articles, action.article),\n  })),\n);\n\nfunction replaceArticle(articles: Articles, payload: Article): Articles {\n  const articleIndex = articles.entities.findIndex((a) => a.slug === payload.slug);\n  const entities = [\n    ...articles.entities.slice(0, articleIndex),\n    Object.assign({}, articles.entities[articleIndex], payload),\n    ...articles.entities.slice(articleIndex + 1),\n  ];\n  return { ...articles, entities, loading: false, loaded: true };\n}\n\nexport function articleListReducer(state: ArticleList | undefined, action: Action): ArticleList {\n  return reducer(state, action);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { ArticleListState, ArticleListConfig } from './article-list.reducer';\nimport { articleListQuery } from './article-list.selectors';\nimport * as ArticleListActions from './article-list.actions';\nimport { withLatestFrom, map } from 'rxjs/operators';\nimport { go } from '@botmind-test/ngrx-router';\n@Injectable()\nexport class ArticleListFacade {\n  articles$ = this.store.select(articleListQuery.getArticles);\n  listConfig$ = this.store.select(articleListQuery.getListConfig);\n  isLoading$ = this.store.select(articleListQuery.isLoading);\n  articlesCount$ = this.store.select(articleListQuery.getArticlesCount);\n  totalPages$ = this.articlesCount$.pipe(\n    withLatestFrom(this.listConfig$),\n    map(([articlesCount, config]) => {\n      return Array.from(new Array(Math.ceil(articlesCount / config.filters.limit)), (val, index) => index + 1);\n    }),\n  );\n\n  constructor(private store: Store<ArticleListState>) {}\n\n  favorite(slug: string) {\n    this.store.dispatch(ArticleListActions.favorite({ slug }));\n  }\n\n  unFavorite(slug: string) {\n    this.store.dispatch(ArticleListActions.unFavorite({ slug }));\n  }\n\n  navigateToArticle(slug: string) {\n    this.store.dispatch(go({ to: { path: ['/article', slug] } }));\n  }\n\n  setPage(page: number) {\n    this.store.dispatch(ArticleListActions.setListPage({ page }));\n  }\n\n  setListConfig(config: ArticleListConfig) {\n    this.store.dispatch(ArticleListActions.setListConfig({ config }));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pager',\r\n  templateUrl: './pager.component.html',\r\n  styleUrls: ['./pager.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PagerComponent {\r\n  @Input() currentPage: number;\r\n  @Input() totalPages: number;\r\n  @Output() setPage: EventEmitter<number> = new EventEmitter();\r\n}\r\n","<ul class=\"pagination\">\r\n  <li\r\n    class=\"page-item\"\r\n    [ngClass]=\"{ active: pageNumber === currentPage }\"\r\n    *ngFor=\"let pageNumber of totalPages\"\r\n    (click)=\"setPage.emit(pageNumber)\"\r\n  >\r\n    <a class=\"page-link\">{{ pageNumber }}</a>\r\n  </li>\r\n</ul>\r\n","import { ApiService, Article } from '@botmind-test/api';\nimport { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ArticleListConfig } from './+state/article-list.reducer';\n\n@Injectable()\nexport class ArticleListService {\n  constructor(private apiService: ApiService) {}\n\n  query(config: ArticleListConfig): Observable<{ articles: Article[]; articlesCount: number }> {\n    return this.apiService.get(\n      '/articles' + (config.type === 'FEED' ? '/feed' : ''),\n      this.toHttpParams(config.filters),\n    );\n  }\n\n  private toHttpParams(params) {\n    return Object.getOwnPropertyNames(params).reduce((p, key) => p.set(key, params[key]), new HttpParams());\n  }\n}\n","import { Article } from '@botmind-test/api';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { withLatestFrom } from 'rxjs/operators';\n\nimport { ArticleListFacade } from './+state/article-list.facade';\nimport { ArticleListConfig } from './+state/article-list.reducer';\n\n@Component({\n  selector: 'app-article-list',\n  templateUrl: './article-list.component.html',\n  styleUrls: ['./article-list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleListComponent implements OnInit {\n  totalPages$: Observable<number[]>;\n  articles$: Observable<Article[]>;\n  listConfig$: Observable<ArticleListConfig>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private facade: ArticleListFacade) {}\n\n  ngOnInit() {\n    this.totalPages$ = this.facade.totalPages$;\n    this.articles$ = this.facade.articles$;\n    this.listConfig$ = this.facade.listConfig$;\n    this.isLoading$ = this.facade.isLoading$;\n  }\n\n  favorite(slug: string) {\n    this.facade.favorite(slug);\n  }\n\n  unFavorite(slug: string) {\n    this.facade.unFavorite(slug);\n  }\n\n  navigateToArticle(slug: string) {\n    this.facade.navigateToArticle(slug);\n  }\n\n  setPage(page: number) {\n    this.facade.setPage(page);\n  }\n}\n","<div class=\"app-article-preview\" [hidden]=\"(isLoading$ | async) === false\">\r\n  Loading articles...\r\n</div>\r\n\r\n<div class=\"app-article-preview\" [hidden]=\"(isLoading$ | async) || (articles$ | async).length > 0\">\r\n  No articles are here... yet.\r\n</div>\r\n\r\n<app-article-list-item\r\n  [hidden]=\"isLoading$ | async\"\r\n  (navigateToArticle)=\"navigateToArticle($event)\"\r\n  (unFavorite)=\"unFavorite($event)\"\r\n  (favorite)=\"favorite($event)\"\r\n  *ngFor=\"let article of articles$ | async\"\r\n  [article]=\"article\"\r\n>\r\n</app-article-list-item>\r\n\r\n<app-pager\r\n  (setPage)=\"setPage($event)\"\r\n  [hidden]=\"(totalPages$ | async)?.length <= 1 || (isLoading$ | async)\"\r\n  [currentPage]=\"(listConfig$ | async).currentPage\"\r\n  [totalPages]=\"totalPages$ | async\"\r\n></app-pager>\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { Article } from '@botmind-test/api';\n\n@Component({\n  selector: 'app-article-list-item',\n  templateUrl: './article-list-item.component.html',\n  styleUrls: ['./article-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleListItemComponent {\n  @Input() article: Article;\n  @Output() favorite: EventEmitter<string> = new EventEmitter();\n  @Output() unFavorite: EventEmitter<string> = new EventEmitter();\n  @Output() navigateToArticle: EventEmitter<string> = new EventEmitter();\n\n  toggleFavorite(article: Article) {\n    if (article.favorited) {\n      this.unFavorite.emit(article.slug);\n    } else {\n      this.favorite.emit(article.slug);\n    }\n  }\n}\n","<div class=\"article-preview\">\r\n  <div class=\"article-meta\">\r\n    <a>\r\n      <img [src]=\"article.author.image\" />\r\n    </a>\r\n    <div class=\"info\">\r\n      <a class=\"author\" [routerLink]=\"['/profile', article.author.username]\">\r\n        {{ article.author.username }}\r\n      </a>\r\n      <span class=\"date\">\r\n        {{ article.createdAt | date: 'longDate' }}\r\n      </span>\r\n    </div>\r\n    <button\r\n      [ngClass]=\"{\r\n        'btn-outline-primary': !article.favorited,\r\n        'btn-primary': article.favorited\r\n      }\"\r\n      class=\"btn btn-sm pull-xs-right\"\r\n      (click)=\"toggleFavorite(article)\"\r\n    >\r\n      <i class=\"ion-heart\"></i>\r\n      <div class=\"info\">{{ article.favoritesCount }}</div>\r\n    </button>\r\n  </div>\r\n  <a (click)=\"navigateToArticle.emit(article.slug)\" class=\"preview-link\">\r\n    <h1 data-e2e-id=\"article-list-title\">{{ article.title }}</h1>\r\n    <p>{{ article.description }}</p>\r\n    <span>Read more...</span>\r\n    <ul class=\"tag-list\">\r\n      <li class=\"tag-default tag-pill tag-outline\" *ngFor=\"let tag of article.tagList\">\r\n        {{ tag }}\r\n      </li>\r\n    </ul>\r\n  </a>\r\n</div>\r\n","import { createAction, props } from '@ngrx/store';\nimport { Article } from '@botmind-test/api';\n\nimport { ArticleListConfig } from './article-list.reducer';\n\nexport const setListPage = createAction('[article-list] SET_LIST_PAGE', props<{ page: number }>());\n\nexport const setListConfig = createAction('[article-list] SET_LIST_CONFIG', props<{ config: ArticleListConfig }>());\n\nexport const loadArticles = createAction('[article-list] LOAD_ARTICLES');\n\nexport const loadArticlesSuccess = createAction(\n  '[article-list] LOAD_ARTICLES_SUCCESS',\n  props<{ articles: Article[]; articlesCount: number }>(),\n);\n\nexport const loadArticlesFail = createAction('[article-list] LOAD_ARTICLES_FAIL', props<{ error: Error }>());\n\nexport const favorite = createAction('[article-list] FAVORITE', props<{ slug: string }>());\n\nexport const favoriteSuccess = createAction('[article-list] FAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const favoriteFail = createAction('[article-list] FAVORITE_FAIL', props<{ error: Error }>());\n\nexport const unFavorite = createAction('[article-list] UNFAVORITE', props<{ slug: string }>());\n\nexport const unFavoriteSuccess = createAction('[article-list] UNFAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const unFavoriteFail = createAction('[article-list] UNFAVORITE_FAIL', props<{ error: Error }>());\n","import { ActionsService } from '@botmind-test/shared';\nimport { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, withLatestFrom } from 'rxjs/operators';\n\nimport { ArticleListService } from '../article-list.service';\nimport * as ArticleListActions from './article-list.actions';\n\nimport { ArticleListFacade } from './article-list.facade';\n\n@Injectable()\nexport class ArticleListEffects {\n  setListPage = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.setListPage),\n      map(() => ArticleListActions.loadArticles()),\n    ),\n  );\n\n  setListTag = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.setListConfig),\n      map(() => ArticleListActions.loadArticles()),\n    ),\n  );\n\n  loadArticles = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.loadArticles),\n      withLatestFrom(this.facade.listConfig$),\n      concatMap(([_, config]) =>\n        this.articleListService.query(config).pipe(\n          map((results) =>\n            ArticleListActions.loadArticlesSuccess({\n              articles: results.articles,\n              articlesCount: results.articlesCount,\n            }),\n          ),\n          catchError((error) => of(ArticleListActions.loadArticlesFail({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  favorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.favorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.favorite(slug).pipe(\n          map((response) => ArticleListActions.favoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleListActions.favoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  unFavorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleListActions.unFavorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.unfavorite(slug).pipe(\n          map((response) => ArticleListActions.unFavoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleListActions.unFavoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private articleListService: ArticleListService,\n    private actionsService: ActionsService,\n    private facade: ArticleListFacade,\n  ) {}\n}\n","import { SharedModule } from '@botmind-test/shared';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ArticleListEffects } from './+state/article-list.effects';\nimport { ArticleListFacade } from './+state/article-list.facade';\nimport { articleListInitialState, articleListReducer, articleListFeatureKey } from './+state/article-list.reducer';\nimport { ArticleListItemComponent } from './article-list-item/article-list-item.component';\nimport { ArticleListComponent } from './article-list.component';\nimport { ArticleListService } from './article-list.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule,\n    StoreModule.forFeature(articleListFeatureKey, articleListReducer, {\n      initialState: articleListInitialState,\n    }),\n    EffectsModule.forFeature([ArticleListEffects]),\n  ],\n  declarations: [ArticleListComponent, ArticleListItemComponent],\n  providers: [ArticleListService, ArticleListEffects, ArticleListFacade],\n  exports: [ArticleListComponent],\n})\nexport class ArticleListModule {}\n"]}