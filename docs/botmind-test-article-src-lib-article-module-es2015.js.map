{"version":3,"sources":["./node_modules/marked/src/TextRenderer.js","./libs/shared/src/index.ts","./libs/article/src/lib/article.service.ts","./node_modules/marked/src/marked.js","./libs/article/src/lib/+state/article.effects.ts","./node_modules/marked/src/Parser.js","./libs/article/src/lib/+state/article.selectors.ts","./libs/article/src/lib/+state/article.actions.ts","./libs/article/src/lib/+state/article.facade.ts","./libs/article/src/lib/article-meta/article-meta.component.ts","./libs/article/src/lib/article-meta/article-meta.component.html","./libs/shared/src/lib/actions.service.ts","./node_modules/marked/src/Slugger.js","./libs/article/src/lib/article-guard.service.ts","./libs/article/src/lib/+state/article.reducer.ts","./node_modules/marked/src/Renderer.js","./node_modules/marked/src/Lexer.js","./libs/article/src/lib/article-comment/article-comment.component.ts","./libs/article/src/lib/article-comment/article-comment.component.html","./libs/shared/src/lib/shared.module.ts","./libs/article/src/lib/article.component.ts","./libs/article/src/lib/article.component.html","./node_modules/marked/src/rules.js","./libs/article/src/lib/article.module.ts","./node_modules/marked/src/InlineLexer.js","./libs/shared/src/lib/pager/pager.component.ts","./libs/shared/src/lib/pager/pager.component.html","./node_modules/marked/src/helpers.js","./libs/article/src/lib/add-comment/add-comment.component.ts","./libs/article/src/lib/add-comment/add-comment.component.html","./node_modules/marked/src/defaults.js","./libs/article/src/lib/markdown.pipe.ts"],"names":[],"mappings":"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ACH,sDAAE,CAAC,8DAA4B,EAAE,gEAA8B,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IACjF,MAAM,IAAI,mCAAiB,KAAK,CAAC,IAAI,KAAE,MAAM,EAAE,MAAM,CAAC,OAAO,GAAE,CAAC;IAChE,uCAAY,KAAK,KAAE,IAAI,IAAG;AAC5B,CAAC,CAAC,EACF,sDAAE,CAAC,gEAA8B,EAAE,kEAAgC,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCACnF,KAAK,KACR,IAAI,EAAE,MAAM,CAAC,OAAO,IACpB,CAAC,CACJ,CAAC;AAEK,SAAS,cAAc,CAAC,KAA+B,EAAE,MAAc;IAC5E,OAAO,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAChC,CAAC;;;;;;;;;;;;ACtFD,OAAO,WAAW,GAAG,mBAAO,CAAC,2BAAe;AAC5C;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,0BAAc;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnKA,OAAO,WAAW,GAAG,mBAAO,CAAC,2BAAe;AAC5C,OAAO,QAAQ,GAAG,mBAAO,CAAC,wBAAY;AACtC;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,0BAAc;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gBAAgB;AAC5D,iCAAiC,IAAI;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACjZA;AAAA;AAAA;AAAA;AAAA;AAAgG;;;;;AAUzF,MAAM,uBAAuB;IANpC;QAUY,WAAM,GAGX,IAAI,0DAAY,EAAE,CAAC;KACzB;;8FARY,uBAAuB;uGAAvB,uBAAuB;QCVpC,yEACE;QAAA,yEACE;QAAA,uEAAqB;QAAA,uDAAkB;QAAA,4DAAI;QAC7C,4DAAM;QACN,yEACE;QAAA,uEACE;QAAA,oEACF;QAAA,4DAAI;QAC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,4BAA4B,IAAI;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,GAAG,SAAS,GAAG,WAAW,GAAG;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,IAAI,EAAE,IAAI;AACnC;AACA,4BAA4B,IAAI;AAChC,wBAAwB,IAAI,KAAK,GAAG,GAAG,GAAG;AAC1C,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA,uCAAuC,GAAG;AAC1C,gEAAgE,GAAG;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,IAAI;AACtB;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA,8BAA8B,IAAI;AAClC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,kCAAkC,eAAe,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA,+DAA+D,GAAG,UAAU,GAAG;AAC/E;;AAEA;AACA;AACA,2CAA2C,WAAW,EAAE;AACxD;;AAEA,yCAAyC,eAAe,EAAE;;AAE1D,yCAAyC,KAAK;AAC9C,2CAA2C,EAAE,kCAAkC,KAAK,6CAA6C,KAAK;AACtI;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA,0BAA0B,oCAAoC,UAAU;AACxE;AACA,2FAA2F,GAAG,+BAA+B,GAAG,gCAAgC,GAAG,aAAa,GAAG,6BAA6B,GAAG;AACnN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,gCAAgC,GAAG;AACnC;AACA,6BAA6B,GAAG;AAChC,gBAAgB,IAAI;AACpB;AACA,CAAC;;AAED;AACA;AACA;AACA;;;;;;;;;;;;;AC/OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACP;AACL;AACN;AACM;AACD;AACJ;AAEgB;AACF;AAC0C;AACxB;AACY;AACxB;AACe;AACtB;AACJ;AACJ;;;;;AAsBxC,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBAHb,CAAC,qEAAc,EAAE,gEAAc,EAAE,2EAAmB,EAAE,mEAAa,CAAC,YAhBtE;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,oEAAgB;oBAC3B,WAAW,EAAE,CAAC,2EAAmB,CAAC;iBACnC;aACF,CAAC;YACF,uDAAW,CAAC,UAAU,CAAC,wEAAiB,EAAE,qEAAc,EAAE;gBACxD,YAAY,EAAE,0EAAmB;aAClC,CAAC;YACF,2DAAa,CAAC,UAAU,CAAC,CAAC,qEAAc,CAAC,CAAC;YAC1C,wEAAe;YACf,iEAAY;SACb;mIAIU,aAAa,mBAFT,oEAAgB,EAAE,0FAAoB,EAAE,mGAAuB,EAAE,4DAAY,EAAE,uFAAmB,aAhB/G,4DAAY,oMAYZ,wEAAe;QACf,iEAAY;6FAKH,aAAa;cApBzB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC;wBACpB;4BACE,IAAI,EAAE,EAAE;4BACR,SAAS,EAAE,oEAAgB;4BAC3B,WAAW,EAAE,CAAC,2EAAmB,CAAC;yBACnC;qBACF,CAAC;oBACF,uDAAW,CAAC,UAAU,CAAC,wEAAiB,EAAE,qEAAc,EAAE;wBACxD,YAAY,EAAE,0EAAmB;qBAClC,CAAC;oBACF,2DAAa,CAAC,UAAU,CAAC,CAAC,qEAAc,CAAC,CAAC;oBAC1C,wEAAe;oBACf,iEAAY;iBACb;gBACD,SAAS,EAAE,CAAC,qEAAc,EAAE,gEAAc,EAAE,2EAAmB,EAAE,mEAAa,CAAC;gBAC/E,YAAY,EAAE,CAAC,oEAAgB,EAAE,0FAAoB,EAAE,mGAAuB,EAAE,4DAAY,EAAE,uFAAmB,CAAC;aACnH;;;;;;;;;;;;;ACtCD,iBAAiB,mBAAO,CAAC,2BAAe;AACxC,OAAO,WAAW,GAAG,mBAAO,CAAC,2BAAe;AAC5C,OAAO,SAAS,GAAG,mBAAO,CAAC,wBAAY;AACvC;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,0BAAc;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;;;;;;;;;;;;;ACpSA;AAAA;AAAA;AAAA;AAAwG;;;;;;ICCtG,wEAME;IAFA,4TAAS,kCAAwB,IAAC;IAElC,uEAAqB;IAAA,uDAAgB;IAAA,4DAAI;IAC3C,4DAAK;;;;IALH,gLAAkD;IAI7B,0DAAgB;IAAhB,8EAAgB;;ADClC,MAAM,cAAc;IAN3B;QASY,YAAO,GAAyB,IAAI,0DAAY,EAAE,CAAC;KAC9D;;4EAJY,cAAc;8FAAd,cAAc;QCR3B,wEACE;QAAA,wGAOK;QACP,4DAAK;;QALsB,0DAAa;QAAb,mFAAa;;6FDI3B,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;gBAEU,WAAW;kBAAnB,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YACI,OAAO;kBAAhB,oDAAM;;;;;;;;;;;;;AEXT;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,gDAAgD;AAChD;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6DAA6D;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,kBAAkB,6BAA6B;;AAE/C;AACA;AACA;AACA;;AAEA,QAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgG;AAC9D;;;;AAQ3B,MAAM,mBAAmB;IANhC;QAYY,kBAAa,GAAyB,IAAI,0DAAY,EAAE,CAAC;QACzD,eAAU,GAAsB,IAAI,0DAAY,EAAE,CAAC;KAC9D;;sFARY,mBAAmB;mGAAnB,mBAAmB;QCXhC,6EAAoC;QAEpC,yEACE;QAAA,sFAOA;QALE,qKAAc,2BAAuB,IAAC;QAKxC,4DAAmB;QACnB,yEACE;QAAA,oEACA;QAAA,4EACE;QADM,2IAAS,wCAAgC,IAAC;QAChD,yEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;;QAXF,0DAAe;QAAf,4EAAe;QAMV,0DAAyB;QAAzB,mJAAyB;;6FDDrB,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;gBAC1C,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;gBAEU,OAAO;kBAAf,mDAAK;YACG,WAAW;kBAAnB,mDAAK;YACG,KAAK;kBAAb,mDAAK;YACG,UAAU;kBAAlB,mDAAK;YACG,YAAY;kBAApB,mDAAK;YACI,aAAa;kBAAtB,oDAAM;YACG,UAAU;kBAAnB,oDAAM;;;;;;;;;;;;;AElBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACnB;;AAG1B,MAAM,YAAY;IACvB,SAAS,CAAC,OAAe;QACvB,OAAO,mCAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7C,CAAC;;wEAHU,YAAY;0GAAZ,YAAY;6FAAZ,YAAY;cADxB,kDAAI;eAAC,EAAE,IAAI,EAAE,UAAU,EAAE","file":"botmind-test-article-src-lib-article-module-es2015.js","sourcesContent":["/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","export { SharedModule } from './lib/shared.module';\r\nexport { ActionsService } from './lib/actions.service';\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService, SingleArticleResponse } from '@botmind-test/api';\nimport { SingleCommentResponse, MultipleCommentsResponse } from './article.interfaces';\n\n@Injectable()\nexport class ArticleService {\n  constructor(private apiService: ApiService) {}\n\n  getArticle(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.get<SingleArticleResponse>('/articles/' + slug);\n  }\n\n  getComments(slug: string): Observable<MultipleCommentsResponse> {\n    return this.apiService.get<MultipleCommentsResponse>(`/articles/${slug}/comments`);\n  }\n\n  deleteArticle(slug: string): Observable<void> {\n    return this.apiService.delete<void>('/articles/' + slug);\n  }\n\n  deleteComment(commentId: number, slug: string): Observable<void> {\n    return this.apiService.delete<void>(`/articles/${slug}/comments/${commentId}`);\n  }\n\n  addComment(slug: string, payload = ''): Observable<SingleCommentResponse> {\n    return this.apiService.post<SingleCommentResponse, { comment: { body: string } }>(`/articles/${slug}/comments`, {\n      comment: { body: payload },\n    });\n  }\n}\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","import { ArticleService } from '../article.service';\nimport { ActionsService } from '@botmind-test/shared';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, exhaustMap, map, mergeMap, withLatestFrom } from 'rxjs/operators';\nimport * as ArticleActions from './article.actions';\n\nimport { NgrxFormsFacade, setErrors, resetForm } from '@botmind-test/ngrx-forms';\nimport { go } from '@botmind-test/ngrx-router';\n\n@Injectable()\nexport class ArticleEffects {\n  loadArticle = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.loadArticle),\n      concatMap((action) =>\n        this.articleService.getArticle(action.slug).pipe(\n          map((response) => ArticleActions.loadArticleSuccess({ article: response.article })),\n          catchError((error) => of(ArticleActions.loadArticleFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  loadComments = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.loadComments),\n      concatMap((action) =>\n        this.articleService.getComments(action.slug).pipe(\n          map((data) => ArticleActions.loadCommentsSuccess({ comments: data.comments })),\n          catchError((error) => of(ArticleActions.loadCommentsFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  deleteArticle = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.deleteArticle),\n      concatMap((action) =>\n        this.articleService.deleteArticle(action.slug).pipe(\n          map((_) => go({ to: { path: ['/'] } })),\n          catchError((error) => of(ArticleActions.deleteArticleFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  addComment = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.addComment),\n      map((action) => action.slug),\n      withLatestFrom(this.ngrxFormsFacade.data$, this.ngrxFormsFacade.structure$),\n      exhaustMap(([slug, data, structure]) =>\n        this.articleService.addComment(slug, data.comment).pipe(\n          mergeMap((response) => [ArticleActions.addCommentSuccess({ comment: response.comment }), resetForm()]),\n          catchError((result) => of(setErrors({ errors: result.error.errors }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteComment = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.deleteComment),\n      concatMap((action) =>\n        this.articleService.deleteComment(action.commentId, action.slug).pipe(\n          map((_) => ArticleActions.deleteCommentSuccess({ commentId: action.commentId })),\n          catchError((error) => of(ArticleActions.deleteCommentFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  follow = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.follow),\n      map((action) => action.username),\n      concatMap((username) =>\n        this.actionsService.followUser(username).pipe(\n          map((response) => ArticleActions.followSuccess({ profile: response.profile })),\n          catchError((error) => of(ArticleActions.followFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  unFollow = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.unFollow),\n      map((action) => action.username),\n      concatMap((username) =>\n        this.actionsService.unfollowUser(username).pipe(\n          map((response) => ArticleActions.unFollowSuccess({ profile: response.profile })),\n          catchError((error) => of(ArticleActions.unFollowFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  favorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.favorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.favorite(slug).pipe(\n          map((response) => ArticleActions.favoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleActions.favoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  unFavorite = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ArticleActions.unFavorite),\n      map((action) => action.slug),\n      concatMap((slug) =>\n        this.actionsService.unfavorite(slug).pipe(\n          map((response) => ArticleActions.unFavoriteSuccess({ article: response.article })),\n          catchError((error) => of(ArticleActions.unFavoriteFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  constructor(\n    private actions$: Actions,\n    private articleService: ArticleService,\n    private actionsService: ActionsService,\n    private ngrxFormsFacade: NgrxFormsFacade,\n  ) {}\n}\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { ArticleState, articleFeatureKey } from './article.reducer';\r\n\r\nconst getArticle = createFeatureSelector<ArticleState>(articleFeatureKey);\r\nexport const getArticleData = createSelector(getArticle, (state: ArticleState) => state.data);\r\nexport const getComments = createSelector(getArticle, (state: ArticleState) => state.comments);\r\nexport const getArticleLoaded = createSelector(getArticle, (state: ArticleState) => state.loaded);\r\nexport const getAuthorUsername = createSelector(getArticle, (state: ArticleState) => state.data.author.username);\r\n\r\nexport const articleQuery = {\r\n  getArticleData,\r\n  getComments,\r\n  getArticleLoaded,\r\n  getAuthorUsername,\r\n};\r\n","import { createAction, props } from '@ngrx/store';\nimport { Article, Profile } from '@botmind-test/api';\nimport { Comment } from '../article.interfaces';\n\nexport const loadArticle = createAction('[article] LOAD_ARTICLE', props<{ slug: string }>());\n\nexport const loadArticleSuccess = createAction('[article] LOAD_ARTICLE_SUCCESS', props<{ article: Article }>());\n\nexport const loadArticleFail = createAction('[article] LOAD_ARTICLE_FAIL', props<{ error: Error }>());\n\nexport const deleteArticle = createAction('[article] DELETE_ARTICLE', props<{ slug: string }>());\n\nexport const deleteArticleFail = createAction('[article] DELETE_ARTICLE_FAIL', props<{ error: Error }>());\n\nexport const initializeArticle = createAction('[article] INITIALIZE_ARTICLE');\n\nexport const loadComments = createAction('[article] LOAD_COMMENTS', props<{ slug: string }>());\n\nexport const loadCommentsSuccess = createAction('[article] LOAD_COMMENTS_SUCCESS', props<{ comments: Comment[] }>());\n\nexport const loadCommentsFail = createAction('[article] LOAD_COMMENTS_FAIL', props<{ error: Error }>());\n\nexport const favorite = createAction('[article] FAVORITE', props<{ slug: string }>());\n\nexport const favoriteSuccess = createAction('[article] FAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const favoriteFail = createAction('[article] FAVORITE_FAIL', props<{ error: Error }>());\n\nexport const unFavorite = createAction('[article] UNFAVORITE', props<{ slug: string }>());\n\nexport const unFavoriteSuccess = createAction('[article] UNFAVORITE_SUCCESS', props<{ article: Article }>());\n\nexport const unFavoriteFail = createAction('[article] UNFAVORITE_FAIL', props<{ error: Error }>());\n\nexport const follow = createAction('[article] FOLLOW', props<{ username: string }>());\n\nexport const followSuccess = createAction('[article] FOLLOW_SUCCESS', props<{ profile: Profile }>());\n\nexport const followFail = createAction('[article] FOLLOW_FAIL', props<{ error: Error }>());\n\nexport const unFollow = createAction('[article] UNFOLLOW', props<{ username: string }>());\n\nexport const unFollowSuccess = createAction('[article] UNFOLLOW_SUCCESS', props<{ profile: Profile }>());\n\nexport const unFollowFail = createAction('[article] UNFOLLOW_FAIL', props<{ error: Error }>());\n\nexport const addComment = createAction('[article] ADD_COMMENT', props<{ slug: string }>());\n\nexport const addCommentFail = createAction('[article] ADD_COMMENT_FAIL', props<{ error: Error }>());\n\nexport const addCommentSuccess = createAction('[article] ADD_COMMENT_SUCCESS', props<{ comment: Comment }>());\n\nexport const deleteComment = createAction('[article] DELETE_COMMENT', props<{ commentId: number; slug: string }>());\n\nexport const deleteCommentFail = createAction('[article] DELETE_COMMENT_FAIL', props<{ error: Error }>());\n\nexport const deleteCommentSuccess = createAction('[article] DELETE_COMMENT_SUCCESS', props<{ commentId: number }>());\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as ArticleActions from './article.actions';\r\nimport { ArticleState } from './article.reducer';\r\nimport { articleQuery } from './article.selectors';\r\n\r\n@Injectable()\r\nexport class ArticleFacade {\r\n  article$ = this.store.select(articleQuery.getArticleData);\r\n  comments$ = this.store.select(articleQuery.getComments);\r\n  articleLoaded$ = this.store.select(articleQuery.getArticleLoaded);\r\n  authorUsername$ = this.store.select(articleQuery.getAuthorUsername);\r\n\r\n  constructor(private store: Store<ArticleState>) {}\r\n\r\n  loadArticle(slug: string) {\r\n    this.store.dispatch(ArticleActions.loadArticle({ slug }));\r\n  }\r\n  loadComments(slug: string) {\r\n    this.store.dispatch(ArticleActions.loadComments({ slug }));\r\n  }\r\n  follow(username: string) {\r\n    this.store.dispatch(ArticleActions.follow({ username }));\r\n  }\r\n  unfollow(username: string) {\r\n    this.store.dispatch(ArticleActions.unFollow({ username }));\r\n  }\r\n  favorite(slug: string) {\r\n    this.store.dispatch(ArticleActions.favorite({ slug }));\r\n  }\r\n  unfavorite(slug: string) {\r\n    this.store.dispatch(ArticleActions.unFavorite({ slug }));\r\n  }\r\n  delete(slug: string) {\r\n    this.store.dispatch(ArticleActions.deleteArticle({ slug }));\r\n  }\r\n  deleteComment(data: { commentId: number; slug: string }) {\r\n    this.store.dispatch(ArticleActions.deleteComment(data));\r\n  }\r\n  submit(slug: string) {\r\n    this.store.dispatch(ArticleActions.addComment({ slug }));\r\n  }\r\n  initializeArticle() {\r\n    this.store.dispatch(ArticleActions.initializeArticle());\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { Article } from '@botmind-test/api';\n\n@Component({\n  selector: 'app-article-meta',\n  templateUrl: './article-meta.component.html',\n  styleUrls: ['./article-meta.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleMetaComponent {\n  @Input() article: Article;\n  @Input() isAuthenticated: boolean;\n  @Input() canModify: boolean;\n  @Output() follow: EventEmitter<string> = new EventEmitter<string>();\n  @Output() unfollow: EventEmitter<string> = new EventEmitter<string>();\n  @Output() unfavorite: EventEmitter<string> = new EventEmitter();\n  @Output() favorite: EventEmitter<string> = new EventEmitter();\n  @Output() delete: EventEmitter<string> = new EventEmitter();\n\n  toggleFavorite() {\n    if (this.article.favorited) {\n      this.unfavorite.emit(this.article.slug);\n    } else {\n      this.favorite.emit(this.article.slug);\n    }\n  }\n\n  toggleFollow() {\n    if (this.article.author.following) {\n      this.unfollow.emit(this.article.author.username);\n    } else {\n      this.follow.emit(this.article.author.username);\n    }\n  }\n\n  deleteArticle() {\n    this.delete.emit(this.article.slug);\n  }\n}\n","<div class=\"article-meta\">\r\n  <a [routerLink]=\"['/profile', article.author.username]\">\r\n    <img [src]=\"article.author.image\" />\r\n  </a>\r\n  <div class=\"info\">\r\n    <a class=\"author\" [routerLink]=\"['/profile', article.author.username]\">\r\n      {{ article.author.username }}\r\n    </a>\r\n    <span class=\"date\">{{ article.createdAt | date: 'longDate' }}</span>\r\n  </div>\r\n\r\n  <span [hidden]=\"!canModify\">\r\n    <a class=\"btn btn-sm btn-outline-secondary\" [routerLink]=\"['/editor', article.slug]\">\r\n      <i class=\"ion-edit\"></i> Edit Article\r\n    </a>\r\n\r\n    <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteArticle()\">\r\n      <i class=\"ion-trash-a\"></i> Delete Article\r\n    </button>\r\n  </span>\r\n\r\n  <span [hidden]=\"canModify\">\r\n    <button\r\n      class=\"btn btn-sm action-btn\"\r\n      [ngClass]=\"{\r\n        'btn-outline-secondary': !article.author.following,\r\n        'btn-secondary': article.author.following\r\n      }\"\r\n      (click)=\"toggleFollow()\"\r\n    >\r\n      <i class=\"ion-plus-round\"></i>\r\n      &nbsp; {{ article.author.following ? 'Unfollow' : 'Follow' }}\r\n      {{ article.author.username }}\r\n    </button>\r\n    &nbsp;&nbsp;\r\n    <button\r\n      class=\"btn btn-sm btn-outline-primary\"\r\n      [ngClass]=\"{\r\n        'btn-outline-primary': !article.favorited,\r\n        'btn-primary': article.favorited\r\n      }\"\r\n      (click)=\"toggleFavorite()\"\r\n    >\r\n      <i class=\"ion-heart\"></i>\r\n      &nbsp; {{ article.favorited ? 'Unfavorite' : 'Favorite' }} Post\r\n      <span class=\"counter\">({{ article.favoritesCount }})</span>\r\n    </button>\r\n  </span>\r\n</div>\r\n","import { ApiService, ProfileResponse, SingleArticleResponse } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ActionsService {\n  constructor(private apiService: ApiService) {}\n\n  followUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.post<ProfileResponse, void>('/profiles/' + username + '/follow', null);\n  }\n\n  unfollowUser(username: string): Observable<ProfileResponse> {\n    return this.apiService.delete<ProfileResponse>('/profiles/' + username + '/follow');\n  }\n\n  favorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.post<SingleArticleResponse, void>('/articles/' + slug + '/favorite', null);\n  }\n\n  unfavorite(slug: string): Observable<SingleArticleResponse> {\n    return this.apiService.delete<SingleArticleResponse>('/articles/' + slug + '/favorite');\n  }\n}\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport * as fromArticle from './+state/article.reducer';\r\nimport { filter, take, switchMap, tap } from 'rxjs/operators';\r\nimport * as fromActions from './+state/article.actions';\r\nimport { ArticleFacade } from './+state/article.facade';\r\n\r\n@Injectable()\r\nexport class ArticleGuardService implements CanActivate {\r\n  constructor(private facade: ArticleFacade) {}\r\n\r\n  waitForArticleToLoad(): Observable<boolean> {\r\n    return this.facade.articleLoaded$.pipe(\r\n      filter(loaded => loaded),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\r\n    const slug = route.params['slug'];\r\n    this.facade.loadArticle(slug);\r\n\r\n    return this.waitForArticleToLoad().pipe(tap(() => this.facade.loadComments(slug)));\r\n  }\r\n}\r\n","import { Article } from '@botmind-test/api';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as ArticleActions from './article.actions';\nimport { Comment } from '../article.interfaces';\n\nexport const articleFeatureKey = 'article';\n\nexport interface ArticleState {\n  data: Article;\n  comments: Comment[];\n  loading: boolean;\n  loaded: boolean;\n}\n\nexport interface ArticleRootState {\n  readonly [articleFeatureKey]: ArticleState;\n}\n\nexport const articleInitialState: ArticleState = {\n  data: {\n    slug: '',\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n    createdAt: '',\n    updatedAt: '',\n    favorited: false,\n    favoritesCount: 0,\n    author: {\n      username: '',\n      bio: '',\n      image: '',\n      following: false,\n      loading: false,\n    },\n  },\n  comments: [],\n  loaded: false,\n  loading: false,\n};\n\nconst reducer = createReducer(\n  articleInitialState,\n  on(ArticleActions.loadArticleSuccess, (state, action) => ({\n    ...state,\n    data: action.article,\n    loaded: true,\n    loading: false,\n  })),\n  on(ArticleActions.loadArticleFail, (state) => ({\n    ...state,\n    data: articleInitialState.data,\n    loaded: false,\n    loading: false,\n  })),\n  on(ArticleActions.addCommentSuccess, (state, action) => {\n    const comments: Comment[] = [action.comment, ...state.comments];\n    return { ...state, comments };\n  }),\n  on(ArticleActions.deleteCommentSuccess, (state, action) => {\n    const comments: Comment[] = state.comments.filter((item) => item.id !== action.commentId);\n    return { ...state, comments };\n  }),\n  on(ArticleActions.initializeArticle, (state) => articleInitialState),\n  on(ArticleActions.deleteArticleFail, (state) => articleInitialState),\n  on(ArticleActions.loadCommentsSuccess, (state, action) => ({\n    ...state,\n    comments: action.comments,\n  })),\n  on(ArticleActions.loadCommentsFail, (state) => ({\n    ...state,\n    comments: articleInitialState.comments,\n  })),\n  on(ArticleActions.followSuccess, ArticleActions.unFollowSuccess, (state, action) => {\n    const data: Article = { ...state.data, author: action.profile };\n    return { ...state, data };\n  }),\n  on(ArticleActions.favoriteSuccess, ArticleActions.unFavoriteSuccess, (state, action) => ({\n    ...state,\n    data: action.article,\n  })),\n);\n\nexport function articleReducer(state: ArticleState | undefined, action: Action): ArticleState {\n  return reducer(state, action);\n}\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","import { Component, Input, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { Article, User } from '@botmind-test/api';\nimport { Comment } from '../article.interfaces';\n\n@Component({\n  selector: 'app-article-comment',\n  templateUrl: './article-comment.component.html',\n  styleUrls: ['./article-comment.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleCommentComponent {\n  @Input() currentUser: User;\n  @Input() comment: Comment;\n  @Input() article: Article;\n  @Output() delete: EventEmitter<{\n    commentId: number;\n    slug: string;\n  }> = new EventEmitter();\n}\n","<div class=\"card\">\r\n  <div class=\"card-block\">\r\n    <p class=\"card-text\">{{ comment.body }}</p>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <a class=\"comment-author\" [routerLink]=\"['/profile', comment.author.username]\">\r\n      <img [src]=\"comment.author.image\" class=\"comment-author-img\" />\r\n    </a>\r\n    &nbsp;\r\n    <a class=\"comment-author\" [routerLink]=\"['/profile', comment.author.username]\">\r\n      {{ comment.author.username }}\r\n    </a>\r\n    <span class=\"date-posted\">\r\n      {{ comment.createdAt | date: 'longDate' }}\r\n    </span>\r\n    <span class=\"mod-options\" [hidden]=\"currentUser.username !== comment.author.username\">\r\n      <i class=\"ion-trash-a\" (click)=\"delete.emit({ commentId: comment.id, slug: article.slug })\"></i>\r\n    </span>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PagerComponent } from './pager/pager.component';\r\nimport { ActionsService } from './actions.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PagerComponent],\r\n  exports: [PagerComponent],\r\n  providers: [ActionsService],\r\n})\r\nexport class SharedModule {}\r\n","import { Article, User } from '@botmind-test/api';\nimport { AuthFacade } from '@botmind-test/auth';\nimport { Field, NgrxFormsFacade } from '@botmind-test/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Comment } from './article.interfaces';\nimport { ArticleFacade } from './+state/article.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'TEXTAREA',\n    name: 'comment',\n    placeholder: 'Write a comment...',\n    attrs: {\n      rows: 3,\n    },\n  },\n];\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleComponent implements OnInit, OnDestroy {\n  article$: Observable<Article>;\n  comments$: Observable<Comment[]>;\n  canModify = false;\n  isAuthenticated$: Observable<boolean>;\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n  unsubscribe$ = new Subject<void>();\n  currentUser$: Observable<User>;\n  touchedForm$: Observable<boolean>;\n\n  constructor(\n    private ngrxFormsFacade: NgrxFormsFacade,\n    private facade: ArticleFacade,\n    private authFacade: AuthFacade,\n  ) {}\n\n  ngOnInit() {\n    this.article$ = this.facade.article$;\n    this.comments$ = this.facade.comments$;\n    this.isAuthenticated$ = this.authFacade.isLoggedIn$;\n    this.currentUser$ = this.authFacade.user$;\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n    this.touchedForm$ = this.ngrxFormsFacade.touched$;\n\n    this.ngrxFormsFacade.setStructure(structure);\n    this.ngrxFormsFacade.setData('');\n    this.authFacade.auth$\n      .pipe(\n        filter((auth) => auth.loggedIn),\n        (auth$) => combineLatest([auth$, this.facade.authorUsername$]),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe(([auth, username]) => {\n        this.canModify = auth.user.username === username;\n      });\n  }\n\n  follow(username: string) {\n    this.facade.follow(username);\n  }\n  unfollow(username: string) {\n    this.facade.unfollow(username);\n  }\n  favorite(slug: string) {\n    this.facade.favorite(slug);\n  }\n  unfavorite(slug: string) {\n    this.facade.unfavorite(slug);\n  }\n  delete(slug: string) {\n    this.facade.delete(slug);\n  }\n  deleteComment(data: { commentId: number; slug: string }) {\n    this.facade.deleteComment(data);\n  }\n  submit(slug: string) {\n    this.facade.submit(slug);\n  }\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.facade.initializeArticle();\n  }\n}\n","<div class=\"article-page\">\r\n  <div class=\"banner\">\r\n    <div class=\"container\">\r\n      <h1 data-e2e-id=\"article-title\">{{ (article$ | async).title }}</h1>\r\n      <app-article-meta\r\n        [article]=\"article$ | async\"\r\n        (follow)=\"follow($event)\"\r\n        (unfollow)=\"unfollow($event)\"\r\n        (favorite)=\"favorite($event)\"\r\n        (unfavorite)=\"unfavorite($event)\"\r\n        (delete)=\"delete($event)\"\r\n        [canModify]=\"canModify\"\r\n      >\r\n      </app-article-meta>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"container page\">\r\n    <div class=\"row article-content\">\r\n      <div class=\"col-md-12\">\r\n        <div [innerHTML]=\"(article$ | async)?.body | markdown\"></div>\r\n      </div>\r\n    </div>\r\n    <hr />\r\n    <div class=\"article-actions\">\r\n      <app-article-meta\r\n        [article]=\"article$ | async\"\r\n        (follow)=\"follow($event)\"\r\n        (unfollow)=\"unfollow($event)\"\r\n        (favorite)=\"favorite($event)\"\r\n        (unfavorite)=\"unfavorite($event)\"\r\n        (delete)=\"delete($event)\"\r\n        [canModify]=\"canModify\"\r\n      ></app-article-meta>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-md-8 offset-md-2\">\r\n        <app-add-comment\r\n          *ngIf=\"isAuthenticated$ | async\"\r\n          [article]=\"article$ | async\"\r\n          [data$]=\"data$\"\r\n          [structure$]=\"structure$\"\r\n          [currentUser]=\"currentUser$ | async\"\r\n          [touchedForm$]=\"touchedForm$\"\r\n          (submitComment)=\"submit($event)\"\r\n          (updateForm)=\"updateForm($event)\"\r\n        >\r\n        </app-add-comment>\r\n\r\n        <div *ngIf=\"(isAuthenticated$ | async) === false\">\r\n          <a [routerLink]=\"['/login']\">Sign in</a> or <a [routerLink]=\"['/register']\">sign up</a> to add comments on\r\n          this article.\r\n        </div>\r\n\r\n        <app-article-comment\r\n          *ngFor=\"let comment of comments$ | async\"\r\n          [currentUser]=\"currentUser$ | async\"\r\n          (delete)=\"deleteComment($event)\"\r\n          [article]=\"article$ | async\"\r\n          [comment]=\"comment\"\r\n        ></app-article-comment>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} +')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","import { NgrxFormsModule } from '@botmind-test/ngrx-forms';\nimport { SharedModule } from '@botmind-test/shared';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { ArticleEffects } from './+state/article.effects';\nimport { ArticleFacade } from './+state/article.facade';\nimport { articleInitialState, articleReducer, articleFeatureKey } from './+state/article.reducer';\nimport { AddCommentComponent } from './add-comment/add-comment.component';\nimport { ArticleCommentComponent } from './article-comment/article-comment.component';\nimport { ArticleGuardService } from './article-guard.service';\nimport { ArticleMetaComponent } from './article-meta/article-meta.component';\nimport { ArticleComponent } from './article.component';\nimport { ArticleService } from './article.service';\nimport { MarkdownPipe } from './markdown.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ArticleComponent,\n        canActivate: [ArticleGuardService],\n      },\n    ]),\n    StoreModule.forFeature(articleFeatureKey, articleReducer, {\n      initialState: articleInitialState,\n    }),\n    EffectsModule.forFeature([ArticleEffects]),\n    NgrxFormsModule,\n    SharedModule,\n  ],\n  providers: [ArticleEffects, ArticleService, ArticleGuardService, ArticleFacade],\n  declarations: [ArticleComponent, ArticleMetaComponent, ArticleCommentComponent, MarkdownPipe, AddCommentComponent],\n})\nexport class ArticleModule {}\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize\n          ? this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0])\n          : cap[0];\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pager',\r\n  templateUrl: './pager.component.html',\r\n  styleUrls: ['./pager.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PagerComponent {\r\n  @Input() currentPage: number;\r\n  @Input() totalPages: number;\r\n  @Output() setPage: EventEmitter<number> = new EventEmitter();\r\n}\r\n","<ul class=\"pagination\">\r\n  <li\r\n    class=\"page-item\"\r\n    [ngClass]=\"{ active: pageNumber === currentPage }\"\r\n    *ngFor=\"let pageNumber of totalPages\"\r\n    (click)=\"setPage.emit(pageNumber)\"\r\n  >\r\n    <a class=\"page-link\">{{ pageNumber }}</a>\r\n  </li>\r\n</ul>\r\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","import { Article, User } from '@botmind-test/api';\nimport { Field } from '@botmind-test/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddCommentComponent {\n  @Input() article: Article;\n  @Input() currentUser: User;\n  @Input() data$: Observable<any>;\n  @Input() structure$: Observable<Field[]>;\n  @Input() touchedForm$: Observable<boolean>;\n  @Output() submitComment: EventEmitter<string> = new EventEmitter();\n  @Output() updateForm: EventEmitter<any> = new EventEmitter();\n}\n","<app-list-errors> </app-list-errors>\r\n\r\n<div class=\"card comment-form\">\r\n  <app-dynamic-form\r\n    class=\"card-block\"\r\n    (updateForm)=\"updateForm.emit($event)\"\r\n    [data$]=\"data$\"\r\n    [structure$]=\"structure$\"\r\n    [touchedForm$]=\"touchedForm$\"\r\n  >\r\n  </app-dynamic-form>\r\n  <div class=\"card-footer\">\r\n    <img [src]=\"currentUser.image\" class=\"comment-author-img\" />\r\n    <button (click)=\"submitComment.emit(article.slug)\" class=\"btn btn-sm btn-primary\" type=\"submit\">\r\n      Post Comment\r\n    </button>\r\n  </div>\r\n</div>\r\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as marked from 'marked';\r\n\r\n@Pipe({ name: 'markdown' })\r\nexport class MarkdownPipe implements PipeTransform {\r\n  transform(content: string): string {\r\n    return marked(content, { sanitize: true });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}