{"version":3,"sources":["webpack:///libs/ngrx-error/src/lib/+state/ngrx-error.reducer.ts","webpack:///libs/ngrx-error/src/lib/+state/ngrx-error.effects.ts","webpack:///libs/ngrx-router/src/lib/+state/router.actions.ts","webpack:///libs/auth/src/lib/+state/auth.actions.ts","webpack:///libs/ngrx-forms/src/lib/ngrx-forms.module.ts","webpack:///libs/ngrx-error/src/index.ts","webpack:///apps/microblogging/$_lazy_route_resource lazy namespace object","webpack:///libs/auth/src/lib/local-storage-jwt.service.ts","webpack:///libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.ts","webpack:///libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.html","webpack:///libs/auth/src/lib/+state/auth.facade.ts","webpack:///libs/api/src/index.ts","webpack:///libs/ngrx-forms/src/index.ts","webpack:///libs/auth/src/lib/auth.module.ts","webpack:///libs/ngrx-router/src/index.ts","webpack:///libs/auth/src/lib/login/login.component.ts","webpack:///libs/auth/src/lib/login/login.component.html","webpack:///libs/ngrx-forms/src/lib/fields/input/input.component.ts","webpack:///libs/ngrx-forms/src/lib/fields/input/input.component.html","webpack:///libs/ngrx-router/src/lib/+state/custom-serializer.ts","webpack:///libs/auth/src/lib/auth-guard.service.ts","webpack:///apps/microblogging/src/app/app.module.ts","webpack:///libs/auth/src/lib/+state/auth.effects.ts","webpack:///libs/auth/src/lib/+state/auth.selectors.ts","webpack:///libs/auth/src/lib/+state/auth.reducer.ts","webpack:///libs/auth/src/lib/auth.service.ts","webpack:///libs/ngrx-forms/src/lib/+state/ngrx-forms.actions.ts","webpack:///libs/ngrx-error/src/lib/+state/ngrx-error.facade.ts","webpack:///libs/ngrx-forms/src/lib/list-errors/list-errors.component.ts","webpack:///libs/ngrx-forms/src/lib/list-errors/list-errors.component.html","webpack:///libs/ngrx-error/src/lib/ngrx-error.module.ts","webpack:///apps/microblogging/src/app/layout/navbar/navbar.component.ts","webpack:///apps/microblogging/src/app/layout/navbar/navbar.component.html","webpack:///libs/ngrx-forms/src/lib/+state/ngrx-forms.selectors.ts","webpack:///libs/ngrx-router/src/lib/+state/router.effects.ts","webpack:///libs/ngrx-forms/src/lib/+state/ngrx-forms.effects.ts","webpack:///libs/ngrx-forms/src/lib/dynamic-form/dynamic-field.directive.ts","webpack:///apps/microblogging/src/app/app.component.ts","webpack:///apps/microblogging/src/app/app.component.html","webpack:///libs/ngrx-error/src/lib/+state/ngrx-error.actions.ts","webpack:///apps/microblogging/src/environments/environment.ts","webpack:///libs/ngrx-router/src/lib/ngrx-router.module.ts","webpack:///apps/microblogging/src/app/layout/footer/footer.component.ts","webpack:///apps/microblogging/src/app/layout/footer/footer.component.html","webpack:///libs/auth/src/index.ts","webpack:///libs/auth/src/lib/register/register.component.ts","webpack:///libs/auth/src/lib/register/register.component.html","webpack:///libs/ngrx-error/src/lib/ngrx-error-interceptor.service.ts","webpack:///apps/microblogging/src/main.ts","webpack:///libs/ngrx-forms/src/lib/+state/ngrx-forms.reducer.ts","webpack:///libs/auth/src/lib/token-interceptor.service.ts","webpack:///libs/api/src/lib/api.module.ts","webpack:///libs/ngrx-forms/src/lib/+state/ngrx-forms.facade.ts","webpack:///libs/ngrx-router/src/lib/+state/router.interfaces.ts","webpack:///libs/api/src/lib/api.service.ts","webpack:///libs/ngrx-forms/src/lib/fields/textarea/textarea.component.ts","webpack:///libs/ngrx-forms/src/lib/fields/textarea/textarea.component.html"],"names":["ngrxErrorFeatureKey","ngrxErrorInitialState","code","reducer","state","action","error","status","message","ngrxErrorReducer","NgrxErrorEffects","actions$","error401$","pipe","_","to","path","error404$","go","back","forward","getUser","getUserSuccess","getUserFail","login","loginSuccess","loginFail","register","registerSuccess","registerFail","logout","NgrxFormsModule","forFeature","initialState","imports","providers","declarations","entryComponents","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","keys","module","id","LocalStorageJwtService","data","localStorage","getItem","setItem","removeItem","DynamicFormComponent","fb","updateForm","unsubscribe$","formBuilder","structure","group","forEach","field","addControl","name","control","validator","patchValue","form","emitEvent","structure$","f","listenFormChanges","f$","data$","subscribe","touchedForm$","t","reset","next","complete","valueChanges","changes","emit","selector","templateUrl","styleUrls","changeDetection","OnPush","AuthFacade","store","auth$","select","getAuth","user$","isLoggedIn$","getLoggedIn","dispatch","authRouting","forChild","component","AuthModule","provide","useClass","multi","type","placeholder","required","attrs","LoginComponent","ngrxFormsFacade","facade","setStructure","updateData","initializeForm","submit","InputComponent","CustomSerializer","routerState","url","queryParams","root","firstChild","params","AuthGuardService","storage","router","token","navigate","AppModule","forRoot","loadChildren","m","HomeModule","ArticleModule","SettingsModule","EditorModule","ProfileModule","initialNavigation","useHash","relativeLinkResolution","production","instrument","bootstrap","AuthEffects","localStorageJwtService","authService","getUser$","item","user","login$","response","result","errors","loginOrRegisterSuccess$","navigateByUrl","register$","logout$","auth","loggedIn","authQuery","authFeatureKey","Status","authInitialState","INIT","email","username","bio","image","IN_PROGRESS","authReducer","AuthService","apiService","get","credentials","post","setData","setErrors","initializeErrors","resetForm","NgrxErrorFacade","ListErrorsComponent","changeDetectorRef","errors$","Object","map","key","markForCheck","NgrxErrorModule","NavbarComponent","isLoggedIn","getNgrxForms","getStructure","getData","isValid","valid","getErrors","getTouchedForm","touched","ngrxFormsQuery","RouterEffects","action$","location","navigate$","query","extras","navigateBack$","navigateForward$","NgrxFormsEffects","setData$","componentsMapper","INPUT","TEXTAREA","DynamicFieldDirective","resolver","container","instance","resolveComponentFactory","createComponent","AppComponent","authFacade","throw401Error","throw404Error","environment","api_url","NgrxRouterModule","stateKey","FooterComponent","RegisterComponent","NgrxErrorInterceptorService","request","handle","caught","err","console","log","ngrxFormsFeatureKey","ngrxFormsInitialState","slice","ngrxFormsReducer","TokenInterceptorService","clone","setHeaders","Authorization","ApiModule","NgrxFormsFacade","touched$","ngrxRouterFeatureKey","ApiService","http","headers","JSON","stringify","put","headersConfig","Accept","TextareaComponent"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as NgrxErrorActions from './ngrx-error.actions';\r\n\r\nexport const ngrxErrorFeatureKey = 'ngrxError';\r\n\r\nexport interface NgrxError {\r\n  code: number;\r\n  message?: string;\r\n}\r\n\r\nexport interface NgrxErrorState {\r\n  readonly [ngrxErrorFeatureKey]: NgrxError;\r\n}\r\n\r\nexport const ngrxErrorInitialState: NgrxError = {\r\n  code: -1,\r\n};\r\n\r\nconst reducer = createReducer(\r\n  ngrxErrorInitialState,\r\n  on(NgrxErrorActions.throw401Error, (state, action) => ({ code: action.error.status, message: action.error.message })),\r\n  on(NgrxErrorActions.throw404Error, (state, action) => ({ code: action.error.status, message: action.error.message })),\r\n);\r\n\r\nexport function ngrxErrorReducer(state: NgrxError | undefined, action: Action): NgrxError {\r\n  return reducer(state, action);\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\nimport * as NgrxErrorActions from './ngrx-error.actions';\nimport { go } from '@botmind-test/ngrx-router';\n\n@Injectable()\nexport class NgrxErrorEffects {\n  error401$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(NgrxErrorActions.throw401Error),\n      map((_) => go({ to: { path: ['/login'] } })),\n    ),\n  );\n\n  error404$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(NgrxErrorActions.throw404Error),\n      map((_) => go({ to: { path: ['/'] } })),\n    ),\n  );\n\n  constructor(private actions$: Actions) {}\n}\n","import { createAction, props } from '@ngrx/store';\r\nimport { NgrxRoute } from './router.interfaces';\r\n\r\nexport const go = createAction('[router] Go', props<{ to: NgrxRoute }>());\r\nexport const back = createAction('[router] BACK');\r\nexport const forward = createAction('[router] FORWARD');\r\n","import { User } from '@botmind-test/api';\nimport { createAction, props } from '@ngrx/store';\n\nexport const getUser = createAction('[auth] GET_USER');\n\nexport const getUserSuccess = createAction('[auth] GET_USER_SUCCESS', props<{ user: User }>());\n\nexport const getUserFail = createAction('[auth] GET_USER_FAIL', props<{ error: Error }>());\n\nexport const login = createAction('[auth] LOGIN');\n\nexport const loginSuccess = createAction('[auth] LOGIN_SUCCESS', props<{ user: User }>());\n\nexport const loginFail = createAction('[auth] LOGIN_FAIL');\n\nexport const register = createAction('[auth] REGISTER');\n\nexport const registerSuccess = createAction('[auth] REGISTER_SUCCESS', props<{ user: User }>());\n\nexport const registerFail = createAction('[auth] REGISTER_FAIL');\n\nexport const logout = createAction('[auth] LOGOUT');\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { NgrxFormsEffects } from './+state/ngrx-forms.effects';\r\nimport { NgrxFormsFacade } from './+state/ngrx-forms.facade';\r\nimport { ngrxFormsInitialState, ngrxFormsReducer, ngrxFormsFeatureKey } from './+state/ngrx-forms.reducer';\r\nimport { DynamicFieldDirective } from './dynamic-form/dynamic-field.directive';\r\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\r\nimport { InputComponent } from './fields/input/input.component';\r\nimport { TextareaComponent } from './fields/textarea/textarea.component';\r\nimport { ListErrorsComponent } from './list-errors/list-errors.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    StoreModule.forFeature(ngrxFormsFeatureKey, ngrxFormsReducer, {\r\n      initialState: ngrxFormsInitialState,\r\n    }),\r\n    EffectsModule.forFeature([NgrxFormsEffects]),\r\n  ],\r\n  providers: [NgrxFormsEffects, NgrxFormsFacade],\r\n  declarations: [DynamicFormComponent, DynamicFieldDirective, InputComponent, TextareaComponent, ListErrorsComponent],\r\n  entryComponents: [InputComponent, TextareaComponent],\r\n  exports: [DynamicFormComponent, ListErrorsComponent],\r\n})\r\nexport class NgrxFormsModule {}\r\n","export { NgrxErrorModule } from './lib/ngrx-error.module';\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"4SVp\";","import { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageJwtService {\r\n  getItem(): Observable<string | null> {\r\n    const data = localStorage.getItem('jwtToken');\r\n    if (data) {\r\n      return of(data);\r\n    }\r\n    return of(null);\r\n  }\r\n\r\n  setItem(data: string): Observable<string> {\r\n    localStorage.setItem('jwtToken', data);\r\n    return of(data);\r\n  }\r\n\r\n  removeItem(): Observable<boolean> {\r\n    localStorage.removeItem('jwtToken');\r\n    return of(true);\r\n  }\r\n}\r\n","import { Field } from '../+state/ngrx-forms.interfaces';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable, Subject, combineLatest } from 'rxjs';\r\nimport { debounceTime, map, takeUntil, tap, filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  styleUrls: ['./dynamic-form.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DynamicFormComponent implements OnInit, OnDestroy {\r\n  @Input() structure$: Observable<Field[]>;\r\n  @Input() data$: Observable<any>;\r\n  @Input() touchedForm$: Observable<boolean>;\r\n  @Output() updateForm: EventEmitter<any> = new EventEmitter();\r\n  unsubscribe$: Subject<void> = new Subject();\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.structure$\r\n      .pipe(\r\n        map(this.formBuilder),\r\n        tap(f => (this.form = f)),\r\n        tap(f => this.listenFormChanges(f)),\r\n        f$ => combineLatest([f$, this.data$]),\r\n        takeUntil(this.unsubscribe$),\r\n      )\r\n      .subscribe(this.patchValue);\r\n\r\n    if (this.touchedForm$) {\r\n      this.touchedForm$\r\n        .pipe(\r\n          filter(t => !t && !!this.form),\r\n          takeUntil(this.unsubscribe$),\r\n        )\r\n        .subscribe(_ => this.form.reset());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  private formBuilder = (structure: Field[]): FormGroup => {\r\n    const group = this.fb.group({});\r\n    structure.forEach(field => group.addControl(field.name, this.control(field)));\r\n    return group;\r\n  };\r\n\r\n  private control = (field: Field): FormControl => {\r\n    return this.fb.control('', field.validator);\r\n  };\r\n\r\n  private patchValue = ([form, data]) => {\r\n    !!data ? form.patchValue(data, { emitEvent: false }) : form.patchValue({}, { emitEvent: false });\r\n  };\r\n\r\n  private listenFormChanges(form: FormGroup) {\r\n    form.valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        takeUntil(this.unsubscribe$),\r\n      )\r\n      .subscribe((changes: any) => this.updateForm.emit(changes));\r\n  }\r\n}\r\n","<form class=\"dynamic-form\" [formGroup]=\"form\" autocomplete=\"off\">\r\n  <ng-container *ngFor=\"let field of structure$ | async\" appDynamicField [field]=\"field\" [group]=\"form\"> </ng-container>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { AuthState } from './auth.reducer';\r\nimport { authQuery } from './auth.selectors';\r\nimport * as AuthActions from './auth.actions';\r\n\r\n@Injectable()\r\nexport class AuthFacade {\r\n  auth$ = this.store.select(authQuery.getAuth);\r\n  user$ = this.store.select(authQuery.getUser);\r\n  isLoggedIn$ = this.store.select(authQuery.getLoggedIn);\r\n\r\n  constructor(private store: Store<AuthState>) {}\r\n\r\n  login() {\r\n    this.store.dispatch(AuthActions.login());\r\n  }\r\n\r\n  logout() {\r\n    this.store.dispatch(AuthActions.logout());\r\n  }\r\n\r\n  register() {\r\n    this.store.dispatch(AuthActions.register());\r\n  }\r\n\r\n  user() {\r\n    this.store.dispatch(AuthActions.getUser());\r\n  }\r\n}\r\n","export { ApiModule } from './lib/api.module';\r\nexport { ApiService } from './lib/api.service';\r\nexport * from './lib/shared.interfaces';\r\n","export { NgrxFormsModule } from './lib/ngrx-forms.module';\r\nexport * from './lib/+state/ngrx-forms.actions';\r\nexport * from './lib/+state/ngrx-forms.reducer';\r\nexport * from './lib/+state/ngrx-forms.facade';\r\nexport * from './lib/+state/ngrx-forms.interfaces';\r\n","import { NgrxFormsModule } from '@botmind-test/ngrx-forms';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthEffects } from './+state/auth.effects';\nimport { AuthFacade } from './+state/auth.facade';\nimport { authInitialState, authReducer, authFeatureKey } from './+state/auth.reducer';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\n\nconst authRouting = RouterModule.forChild([\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n]);\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgrxFormsModule,\n    authRouting,\n    StoreModule.forFeature(authFeatureKey, authReducer, {\n      initialState: authInitialState,\n    }),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n  providers: [\n    AuthEffects,\n    AuthGuardService,\n    AuthService,\n    AuthFacade,\n    TokenInterceptorService,\n    LocalStorageJwtService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    },\n  ],\n  declarations: [LoginComponent, RegisterComponent],\n})\nexport class AuthModule {}\n","export { NgrxRouterModule } from './lib/ngrx-router.module';\r\nexport * from './lib/+state/router.actions';\r\n","import { Field, NgrxFormsFacade } from '@botmind-test/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Username',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Password',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password',\n    },\n  },\n];\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.login();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","<div class=\"auth-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Sign in</h1>\r\n        <p class=\"text-xs-center\">\r\n          <a [routerLink]=\"['/register']\">Need an account?</a>\r\n        </p>\r\n\r\n        <app-list-errors></app-list-errors>\r\n\r\n        <app-dynamic-form (updateForm)=\"updateForm($event)\" [data$]=\"data$\" [structure$]=\"structure$\">\r\n        </app-dynamic-form>\r\n        <button data-e2e-id=\"sign-in\" (click)=\"submit()\" class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\r\n          Sign in\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Field } from '../../+state/ngrx-forms.interfaces';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class InputComponent {\r\n  @Input() field: Field;\r\n  @Input() group: FormGroup;\r\n}\r\n","<fieldset [formGroup]=\"group\" class=\"form-group\">\r\n  <input\r\n    [formControlName]=\"field?.name\"\r\n    [attr.placeholder]=\"field?.placeholder\"\r\n    class=\"form-control form-control-lg\"\r\n    [attr.type]=\"field?.attrs?.type || 'text'\"\r\n  />\r\n</fieldset>\r\n","import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport * as fromRouter from '@ngrx/router-store';\r\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\r\n\r\nimport { RouterState, RouterStateUrl } from './router.interfaces';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    const { url } = routerState;\r\n    const { queryParams } = routerState.root;\r\n\r\n    let state: ActivatedRouteSnapshot = routerState.root;\r\n    while (state.firstChild) {\r\n      state = state.firstChild;\r\n    }\r\n    const { params } = state;\r\n\r\n    return { url, queryParams, params };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private storage: LocalStorageJwtService, private router: Router) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.storage.getItem().pipe(\r\n      map(token => {\r\n        if (!token) {\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        }\r\n        return true;\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n}\r\n","import { ApiModule } from '@botmind-test/api';\nimport { AuthModule } from '@botmind-test/auth';\nimport { NgrxErrorModule } from '@botmind-test/ngrx-error';\nimport { NgrxRouterModule } from '@botmind-test/ngrx-router';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { NxModule } from '@nrwl/angular';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { NavbarComponent } from './layout/navbar/navbar.component';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    AuthModule,\n    BrowserModule,\n    NxModule.forRoot(),\n    RouterModule.forRoot(\n      [\n        {\n          path: '',\n          loadChildren: () => import('@botmind-test/home/src/lib/home.module').then((m) => m.HomeModule),\n        },\n        {\n          path: 'article/:slug',\n          loadChildren: () => import('@botmind-test/article/src/lib/article.module').then((m) => m.ArticleModule),\n        },\n        {\n          path: 'settings',\n          loadChildren: () => import('@botmind-test/settings/src/lib/settings.module').then((m) => m.SettingsModule),\n        },\n        {\n          path: 'editor',\n          loadChildren: () => import('@botmind-test/editor/src/lib/editor.module').then((m) => m.EditorModule),\n        },\n        {\n          path: 'profile/:username',\n          loadChildren: () => import('@botmind-test/profile/src/lib/profile.module').then((m) => m.ProfileModule),\n        },\n      ],\n      {\n        initialNavigation: 'enabled',\n        useHash: true,\n        relativeLinkResolution: 'legacy',\n      },\n    ),\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    NgrxRouterModule,\n    NgrxErrorModule,\n  ],\n  declarations: [AppComponent, FooterComponent, NavbarComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { AuthService } from '../auth.service';\nimport { NgrxFormsFacade, setErrors } from '@botmind-test/ngrx-forms';\nimport * as fromNgrxForms from '@botmind-test/ngrx-forms';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\n\nimport * as AuthActions from './auth.actions';\nimport { LocalStorageJwtService } from '../local-storage-jwt.service';\n\n@Injectable()\nexport class AuthEffects {\n  getUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.getUser),\n      switchMap((item) =>\n        this.authService.user().pipe(\n          map((data) => AuthActions.getUserSuccess({ user: data.user })),\n          catchError((error) => of(AuthActions.getUserFail(error))),\n        ),\n      ),\n    ),\n  );\n\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.login),\n      withLatestFrom(this.ngrxFormsFacade.data$),\n      exhaustMap(([action, data]) =>\n        this.authService.login(data).pipe(\n          map((response) => AuthActions.loginSuccess({ user: response.user })),\n          catchError((result) => of(fromNgrxForms.setErrors({ errors: result.error.errors }))),\n        ),\n      ),\n    ),\n  );\n\n  loginOrRegisterSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.loginSuccess, AuthActions.registerSuccess),\n        tap((action) => {\n          this.localStorageJwtService.setItem(action.user.token);\n          this.router.navigateByUrl('/');\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  register$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(AuthActions.register),\n      withLatestFrom(this.ngrxFormsFacade.data$),\n      exhaustMap(([action, data]) =>\n        this.authService.register(data).pipe(\n          map((response) => AuthActions.registerSuccess({ user: response.user })),\n          catchError((result) => of(setErrors({ errors: result.error.errors }))),\n        ),\n      ),\n    ),\n  );\n\n  logout$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.logout),\n        tap((action) => {\n          this.localStorageJwtService.removeItem();\n          this.router.navigateByUrl('login');\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localStorageJwtService: LocalStorageJwtService,\n    private ngrxFormsFacade: NgrxFormsFacade,\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { Auth, authFeatureKey } from './auth.reducer';\r\n\r\nexport const getAuth = createFeatureSelector<Auth>(authFeatureKey);\r\nexport const getLoggedIn = createSelector(getAuth, (auth: Auth) => auth.loggedIn);\r\nexport const getUser = createSelector(getAuth, (auth: Auth) => auth.user);\r\n\r\nexport const authQuery = {\r\n  getAuth,\r\n  getLoggedIn,\r\n  getUser,\r\n};\r\n","import { User } from '@botmind-test/api';\nimport { createReducer, Action, on } from '@ngrx/store';\nimport * as AuthActions from './auth.actions';\n\nexport const authFeatureKey = 'auth';\n\nexport interface Auth {\n  loggedIn: boolean;\n  user: User;\n  status: Status;\n}\n\nexport interface AuthState {\n  readonly [authFeatureKey]: Auth;\n}\n\nexport enum Status {\n  INIT = 'INIT',\n  IN_PROGRESS = 'IN_PROGRESS',\n}\n\nexport const authInitialState: Auth = {\n  loggedIn: false,\n  status: Status.INIT,\n  user: {\n    email: '',\n    token: '',\n    username: '',\n    bio: '',\n    image: '',\n  },\n};\n\nconst reducer = createReducer(\n  authInitialState,\n  on(AuthActions.getUserSuccess, (state, action) => ({\n    ...state,\n    loggedIn: true,\n    user: action.user,\n  })),\n  on(AuthActions.getUserFail, (state, action) => ({\n    ...authInitialState,\n  })),\n  on(AuthActions.login, AuthActions.register, (state, _) => ({\n    ...state,\n    status: Status.IN_PROGRESS,\n  })),\n  on(AuthActions.registerSuccess, AuthActions.loginSuccess, (state, action) => ({\n    ...state,\n    loggedIn: true,\n    status: Status.INIT,\n    user: action.user,\n  })),\n  on(AuthActions.registerFail, AuthActions.loginFail, (state, _) => ({\n    ...state,\n    status: Status.INIT,\n  })),\n  on(AuthActions.logout, (state, action) => ({\n    ...authInitialState,\n  })),\n);\n\nexport function authReducer(state: Auth | undefined, action: Action): Auth {\n  return reducer(state, action);\n}\n","import { ApiService, UserResponse } from '@botmind-test/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginUser, LoginUserRequest, NewUserRequest, NewUser } from './auth.interfaces';\n\n@Injectable()\nexport class AuthService {\n  constructor(private apiService: ApiService) {}\n\n  user(): Observable<UserResponse> {\n    return this.apiService.get<UserResponse>('/user');\n  }\n\n  login(credentials: LoginUser): Observable<UserResponse> {\n    return this.apiService.post<UserResponse, LoginUserRequest>('/users/login', { user: credentials });\n  }\n\n  register(credentials: NewUser): Observable<UserResponse> {\n    return this.apiService.post<UserResponse, NewUserRequest>('/users', { user: credentials });\n  }\n}\n","import { Errors } from './ngrx-forms.interfaces';\r\nimport { props, createAction } from '@ngrx/store';\r\n\r\nexport const setData = createAction('[ngrxForms] SET_DATA', props<{ data: any }>());\r\nexport const updateData = createAction('[ngrxForms] UPDATE_DATA', props<{ data: any }>());\r\nexport const setStructure = createAction('[ngrxForms] SET_STRUCTURE', props<{ structure: any }>());\r\nexport const setErrors = createAction('[ngrxForms] SET_ERRORS', props<{ errors: Errors }>());\r\nexport const initializeErrors = createAction('[ngrxForms] INITIALIZE_ERRORS');\r\nexport const initializeForm = createAction('[ngrxForms] INITIALIZE_FORM');\r\nexport const resetForm = createAction('[ngrxForms] RESET_FORM');\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { NgrxErrorState } from './ngrx-error.reducer';\r\nimport * as NgrxErrorActions from './ngrx-error.actions';\r\n\r\n@Injectable()\r\nexport class NgrxErrorFacade {\r\n  constructor(private store: Store<NgrxErrorState>) {}\r\n\r\n  throw401Error(error: HttpErrorResponse) {\r\n    this.store.dispatch(NgrxErrorActions.throw401Error({ error }));\r\n  }\r\n\r\n  throw404Error(error: HttpErrorResponse) {\r\n    this.store.dispatch(NgrxErrorActions.throw404Error({ error }));\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { NgrxFormsFacade } from '../+state/ngrx-forms.facade';\r\n\r\n@Component({\r\n  selector: 'app-list-errors',\r\n  templateUrl: './list-errors.component.html',\r\n  styleUrls: ['./list-errors.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ListErrorsComponent implements OnInit, OnDestroy {\r\n  errors: string[];\r\n  unsubscribe$: Subject<void> = new Subject();\r\n\r\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    this.ngrxFormsFacade.errors$.subscribe(e => {\r\n      this.errors = Object.keys(e || {}).map(key => `${key} ${e[key]}`);\r\n      this.changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n    this.ngrxFormsFacade.initializeErrors();\r\n  }\r\n}\r\n","<ul class=\"error-messages\" *ngIf=\"errors?.length > 0\">\r\n  <li data-e2e-id=\"error\" *ngFor=\"let error of errors\">\r\n    {{ error }}\r\n  </li>\r\n</ul>\r\n","import { ErrorHandler, NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { NgrxErrorEffects } from './+state/ngrx-error.effects';\r\nimport { ngrxErrorReducer, ngrxErrorInitialState, ngrxErrorFeatureKey } from './+state/ngrx-error.reducer';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgrxErrorInterceptorService } from './ngrx-error-interceptor.service';\r\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StoreModule.forFeature(ngrxErrorFeatureKey, ngrxErrorReducer, {\r\n      initialState: ngrxErrorInitialState,\r\n    }),\r\n    EffectsModule.forFeature([NgrxErrorEffects]),\r\n  ],\r\n  providers: [\r\n    NgrxErrorFacade,\r\n    NgrxErrorEffects,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NgrxErrorInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class NgrxErrorModule {}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '@botmind-test/api';\n\n@Component({\n  selector: 'microblogging-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavbarComponent {\n  @Input() user: User;\n  @Input() isLoggedIn: boolean;\n}\n","<nav class=\"navbar navbar-light\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\">microblogging</a>\n    <!-- Logged out user -->\n    <ul *ngIf=\"!isLoggedIn\" class=\"nav navbar-nav pull-xs-right\">\n      <li class=\"nav-item\">\n        <!-- Add \"active\" class when you're on that page\" -->\n        <a class=\"nav-link\" routerLink=\"/\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Sign in</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Sign up</a>\n      </li>\n    </ul>\n\n    <!-- Logged in user -->\n    <ul *ngIf=\"isLoggedIn\" class=\"nav navbar-nav pull-xs-right\">\n      <li class=\"nav-item\">\n        <!-- Add \"active\" class when you're on that page\" -->\n        <a\n          class=\"nav-link active\"\n          [routerLink]=\"['/']\"\n          routerLinkActive=\"active\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          >Home</a\n        >\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/editor\" routerLinkActive=\"active\">\n          <i class=\"ion-compose\"></i>&nbsp;New Post\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/settings\" routerLinkActive=\"active\">\n          <i class=\"ion-gear-a\"></i>&nbsp;Settings\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a\n          data-e2e-id=\"logedin-user\"\n          class=\"nav-link\"\n          [routerLink]=\"['/profile', user.username]\"\n          routerLinkActive=\"active\"\n        >\n          <img [src]=\"user.image\" *ngIf=\"user.image\" class=\"user-pic\" />\n          {{ user.username }}\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nimport { NgrxForms } from './ngrx-forms.interfaces';\r\nimport { ngrxFormsFeatureKey } from './ngrx-forms.reducer';\r\n\r\nconst getNgrxForms = createFeatureSelector<NgrxForms>(ngrxFormsFeatureKey);\r\nexport const getStructure = createSelector(getNgrxForms, (state: NgrxForms) => state.structure);\r\nexport const getData = createSelector(getNgrxForms, (state: NgrxForms) => state.data);\r\nexport const isValid = createSelector(getNgrxForms, (state: NgrxForms) => state.valid);\r\nexport const getErrors = createSelector(getNgrxForms, (state: NgrxForms) => state.errors);\r\nexport const getTouchedForm = createSelector(getNgrxForms, (state: NgrxForms) => state.touched);\r\n\r\nexport const ngrxFormsQuery = {\r\n  getStructure,\r\n  getData,\r\n  isValid,\r\n  getErrors,\r\n  getTouchedForm,\r\n};\r\n","import { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport * as RouterActions from './router.actions';\r\n\r\n@Injectable()\r\nexport class RouterEffects {\r\n  navigate$ = createEffect(\r\n    () =>\r\n      this.action$.pipe(\r\n        ofType(RouterActions.go),\r\n        map(action => action.to),\r\n        tap(({ path, query: queryParams, extras }) => this.router.navigate(path, { queryParams, ...extras })),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n\r\n  navigateBack$ = createEffect(\r\n    () =>\r\n      this.action$.pipe(\r\n        ofType(RouterActions.back),\r\n        tap(() => this.location.back()),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n\r\n  navigateForward$ = createEffect(\r\n    () =>\r\n      this.action$.pipe(\r\n        ofType(RouterActions.forward),\r\n        tap(() => this.location.forward()),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n\r\n  constructor(private action$: Actions, private router: Router, private location: Location) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport * as NgrxFormsActions from './ngrx-forms.actions';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class NgrxFormsEffects {\r\n  setData$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(NgrxFormsActions.setData, NgrxFormsActions.updateData),\r\n      map(action => NgrxFormsActions.initializeErrors()),\r\n    ),\r\n  );\r\n\r\n  constructor(private actions$: Actions) {}\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Field } from '../+state/ngrx-forms.interfaces';\r\nimport { InputComponent } from '../fields/input/input.component';\r\nimport { TextareaComponent } from '../fields/textarea/textarea.component';\r\n\r\nconst componentsMapper: { [key: string]: Type<any> } = {\r\n  INPUT: InputComponent,\r\n  TEXTAREA: TextareaComponent,\r\n};\r\n\r\n@Directive({\r\n  selector: '[appDynamicField]',\r\n})\r\nexport class DynamicFieldDirective implements OnInit, OnChanges {\r\n  @Input() field: Field;\r\n  @Input() group: FormGroup;\r\n  component: ComponentRef<any>;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\r\n\r\n  ngOnChanges() {\r\n    if (this.component) {\r\n      this.component.instance.field = this.field;\r\n      this.component.instance.group = this.group;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    const component = this.resolver.resolveComponentFactory<any>(componentsMapper[this.field.type]);\r\n    this.component = this.container.createComponent(component);\r\n    this.component.instance.field = this.field;\r\n    this.component.instance.group = this.group;\r\n  }\r\n}\r\n","import { User } from '@botmind-test/api';\nimport { AuthFacade } from '@botmind-test/auth';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { LocalStorageJwtService } from '@botmind-test/auth';\n\n@Component({\n  selector: 'microblogging-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  user$: Observable<User>;\n  isLoggedIn$: Observable<boolean>;\n\n  constructor(private authFacade: AuthFacade, private localStorageJwtService: LocalStorageJwtService) {}\n\n  ngOnInit() {\n    this.user$ = this.authFacade.user$;\n    this.isLoggedIn$ = this.authFacade.isLoggedIn$;\n    this.localStorageJwtService\n      .getItem()\n      .pipe(\n        take(1),\n        filter((token) => !!token),\n      )\n      .subscribe((token) => this.authFacade.user());\n  }\n}\n","<microblogging-navbar [isLoggedIn]=\"isLoggedIn$ | async\" [user]=\"user$ | async\"></microblogging-navbar>\n<router-outlet></router-outlet>\n<microblogging-footer></microblogging-footer>\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\nexport const throw401Error = createAction('[ngrx-error] THROW_401_ERROR', props<{ error: HttpErrorResponse }>());\r\nexport const throw404Error = createAction('[ngrx-error] THROW_404_ERROR', props<{ error: HttpErrorResponse }>());\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'https://microblogging.productionready.io/api',\n};\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { routerReducer, RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { StoreModule } from '@ngrx/store';\r\n\r\nimport { CustomSerializer } from './+state/custom-serializer';\r\nimport { RouterEffects } from './+state/router.effects';\r\nimport { ngrxRouterFeatureKey } from './+state/router.interfaces';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature(ngrxRouterFeatureKey, routerReducer),\r\n    EffectsModule.forFeature([RouterEffects]),\r\n    StoreRouterConnectingModule.forRoot({ stateKey: ngrxRouterFeatureKey }),\r\n  ],\r\n  providers: [RouterEffects, [{ provide: RouterStateSerializer, useClass: CustomSerializer }]],\r\n})\r\nexport class NgrxRouterModule {}\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'microblogging-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<footer>\n  <div class=\"container\">\n    <a href=\"/\" class=\"logo-font\">microblogging</a>\n    <span class=\"attribution\">\n      An interactive learning project from\n      <a href=\"https://thinkster.io\">Thinkster</a>. Code &amp; design licensed under MIT.\n    </span>\n  </div>\n</footer>\n","export { AuthModule } from './lib/auth.module';\r\nexport * from './lib/+state/auth.actions';\r\nexport * from './lib/+state/auth.reducer';\r\nexport * from './lib/+state/auth.facade';\r\nexport * from './lib/auth-guard.service';\r\nexport * from './lib/local-storage-jwt.service';\r\n","import { Field, NgrxFormsFacade } from '@botmind-test/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'username',\n    placeholder: 'Username',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Email',\n    validator: [Validators.required],\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Password',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password',\n    },\n  },\n];\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.register();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","<div class=\"auth-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Sign in</h1>\r\n        <p class=\"text-xs-center\">\r\n          <a [routerLink]=\"['/login']\">Have an account?</a>\r\n        </p>\r\n\r\n        <app-list-errors></app-list-errors>\r\n\r\n        <app-dynamic-form (updateForm)=\"updateForm($event)\" [data$]=\"data$\" [structure$]=\"structure$\">\r\n        </app-dynamic-form>\r\n        <button data-e2e-id=\"sign-up\" (click)=\"submit()\" class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\r\n          Sign up\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\r\n\r\n@Injectable()\r\nexport class NgrxErrorInterceptorService implements HttpInterceptor {\r\n  constructor(private facade: NgrxErrorFacade) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error, caught) => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          switch (error.status) {\r\n            case 401:\r\n              this.facade.throw401Error(error);\r\n              break;\r\n            case 404:\r\n              this.facade.throw404Error(error);\r\n              break;\r\n            default:\r\n              throwError(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.log(err));\n","import { NgrxForms } from './ngrx-forms.interfaces';\r\nimport * as NgrxFormsActions from './ngrx-forms.actions';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nexport const ngrxFormsFeatureKey = 'ngrxForms';\r\n\r\nexport interface NgrxFormsState {\r\n  readonly [ngrxFormsFeatureKey]: NgrxForms;\r\n}\r\n\r\nexport const ngrxFormsInitialState: NgrxForms = {\r\n  data: {},\r\n  structure: [],\r\n  valid: true,\r\n  errors: {},\r\n  touched: false,\r\n};\r\n\r\nconst reducer = createReducer(\r\n  ngrxFormsInitialState,\r\n  on(NgrxFormsActions.setData, (state, action) => ({ ...state, data: action.data })),\r\n  on(NgrxFormsActions.updateData, (state, action) => {\r\n    const data = { ...state.data, ...action.data };\r\n    return { ...state, data, touched: true };\r\n  }),\r\n  on(NgrxFormsActions.setStructure, (state, action) => ({ ...state, structure: action.structure.slice(0) })),\r\n  on(NgrxFormsActions.setErrors, (state, action) => ({ ...state, errors: action.errors })),\r\n  on(NgrxFormsActions.initializeErrors, (state, action) => ({ ...state, errors: {} })),\r\n  on(NgrxFormsActions.initializeForm, (state, action) => ngrxFormsInitialState),\r\n  on(NgrxFormsActions.resetForm, (state, action) => ({ ...state, touched: false })),\r\n);\r\n\r\nexport function ngrxFormsReducer(state: NgrxForms | undefined, action: Action): NgrxForms {\r\n  return reducer(state, action);\r\n}\r\n","import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n  constructor(private localStorage: LocalStorageJwtService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let token: string;\r\n    this.localStorage.getItem().subscribe(t => (token = t));\r\n    if (token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule],\r\n  providers: [ApiService],\r\n})\r\nexport class ApiModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { NgrxFormsState } from './ngrx-forms.reducer';\r\nimport { ngrxFormsQuery } from './ngrx-forms.selectors';\r\nimport * as NgrxFormsActions from './ngrx-forms.actions';\r\n\r\n@Injectable()\r\nexport class NgrxFormsFacade {\r\n  data$ = this.store.select(ngrxFormsQuery.getData);\r\n  structure$ = this.store.select(ngrxFormsQuery.getStructure);\r\n  errors$ = this.store.select(ngrxFormsQuery.getErrors);\r\n  touched$ = this.store.select(ngrxFormsQuery.getTouchedForm);\r\n\r\n  constructor(private store: Store<NgrxFormsState>) {}\r\n\r\n  setStructure(structure: any) {\r\n    this.store.dispatch(NgrxFormsActions.setStructure({ structure }));\r\n  }\r\n\r\n  setData(data: any) {\r\n    this.store.dispatch(NgrxFormsActions.setData({ data }));\r\n  }\r\n\r\n  updateData(data: any) {\r\n    this.store.dispatch(NgrxFormsActions.updateData({ data }));\r\n  }\r\n\r\n  initializeForm() {\r\n    this.store.dispatch(NgrxFormsActions.initializeForm());\r\n  }\r\n\r\n  initializeErrors() {\r\n    this.store.dispatch(NgrxFormsActions.initializeErrors());\r\n  }\r\n\r\n  resetForm() {\r\n    this.store.dispatch(NgrxFormsActions.resetForm());\r\n  }\r\n}\r\n","import { Params, NavigationExtras } from '@angular/router';\r\nimport * as fromRouter from '@ngrx/router-store';\r\n\r\nexport const ngrxRouterFeatureKey = 'router';\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  queryParams: Params;\r\n  params: Params;\r\n}\r\n\r\nexport interface RouterState {\r\n  readonly [ngrxRouterFeatureKey]: fromRouter.RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\nexport interface NgrxRoute {\r\n  path: any[];\r\n  query?: object;\r\n  extras?: NavigationExtras;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@env/environment';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get<T>(url: string, params: HttpParams = new HttpParams()): Observable<T> {\r\n    return this.http.get<T>(`${environment.api_url}${url}`, {\r\n      headers: this.headers,\r\n      params,\r\n    });\r\n  }\r\n\r\n  post<T, D>(url: string, data: D): Observable<T> {\r\n    return this.http.post<T>(`${environment.api_url}${url}`, JSON.stringify(data), { headers: this.headers });\r\n  }\r\n\r\n  put<T, D>(url: string, data: D): Observable<T> {\r\n    return this.http.put<T>(`${environment.api_url}${url}`, JSON.stringify(data), {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  delete<T>(url: string): Observable<T> {\r\n    return this.http.delete<T>(`${environment.api_url}${url}`, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  get headers(): HttpHeaders {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n    };\r\n\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\r\nimport { Field } from '../../+state/ngrx-forms.interfaces';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-textarea',\r\n  templateUrl: './textarea.component.html',\r\n  styleUrls: ['./textarea.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TextareaComponent {\r\n  @Input() field: Field;\r\n  @Input() group: FormGroup;\r\n}\r\n","<fieldset [formGroup]=\"group\" class=\"form-group\">\r\n  <textarea\r\n    class=\"form-control form-control-lg\"\r\n    [attr.rows]=\"field?.attrs?.rows || 5\"\r\n    [formControlName]=\"field?.name\"\r\n    [attr.placeholder]=\"field?.placeholder\"\r\n  >\r\n  </textarea>\r\n</fieldset>\r\n"]}